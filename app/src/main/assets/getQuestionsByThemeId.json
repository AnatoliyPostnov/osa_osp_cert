[
  {
    "exam_id": 1,
    "theme_id": 1,
    "theme_content": "Declarations and Access Control",
    "questions": [
      {
        "content": "Which are true? (Choose all that apply.)",
        "question_id": 1,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "\"X extends Y\" is correct if and only if X is a class and Y is an interface."
          },
          {
            "answer_id": 2,
            "content": "\"X extends Y\" is correct if and only if X is an interface and Y is a class."
          },
          {
            "answer_id": 3,
            "content": "\"X extends Y\" is correct if X and Y are either both classes or both interfaces."
          },
          {
            "answer_id": 4,
            "content": "\"X extends Y\" is correct for all combinations of X and Y being classes and/or interfaces."
          }
        ]
      },
      {
        "content": "        Given:\n        ``` java\n        class Rocket {\n            private void blastOff() { System.out.print(\"bang \"); }\n        }\n        public class Shuttle extends Rocket {\n            public static void main(String[] args) {\n                new Shuttle().go();\n            }\n        void go() {\n            blastOff();\n            // Rocket.blastOff();  // line A\n          }\n          private void blastOff() { System.out.print(\"sh-bang \"); }\n        }\n        ```\n        Which are true? (Choose all that apply.)",
        "question_id": 2,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "As the code stands, the output is bang."
          },
          {
            "answer_id": 2,
            "content": "As the code stands, the output is sh-bang."
          },
          {
            "answer_id": 3,
            "content": "As the code stands, compilation fails."
          },
          {
            "answer_id": 4,
            "content": "If line A is uncommented, the output is bang bang."
          },
          {
            "answer_id": 5,
            "content": "If line A is uncommented, the output is sh-bang bang."
          },
          {
            "answer_id": 6,
            "content": "If line A is uncommented, compilation fails."
          }
        ]
      },
      {
        "content": "    Given that the for loop's syntax is correct, and given:\n    \n    ```\n    import static java.lang.System.*; \n    class _ {\n      static public void main(String[] __A_V_) {\n        String ${'$'} = \"\";\n        for(int x=0; ++x < __A_V_.length; )\n          ${'$'} += __A_V_[x];            \n        out.println(${'$'});\n      }\n    }\n    ```\n    \n    And the command line:\n    \n    ```    \n    java _ - A .\n    ```    \n    \n    What is the result?",
        "question_id": 3,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "-A"
          },
          {
            "answer_id": 2,
            "content": "A."
          },
          {
            "answer_id": 3,
            "content": "-A."
          },
          {
            "answer_id": 4,
            "content": "_A."
          },
          {
            "answer_id": 5,
            "content": "_-A."
          },
          {
            "answer_id": 6,
            "content": "Compilation fails"
          },
          {
            "answer_id": 7,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    1. enum Animals {\n    2.   DOG(\"woof\"), CAT(\"meow\"), FISH(\"burble\");\n    3.   String sound;\n    4.   Animals(String s) { sound = s; }\n    5. }\n    6. class TestEnum {\n    7.   static Animals a;\n    8.   public static void main(String[] args) {\n    9.     System.out.println(a.DOG.sound + \" \" + a.FISH.sound);\n   10. }\n   11. }\n    ```\n    What is the result?",
        "question_id": 4,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "woof burble"
          },
          {
            "answer_id": 2,
            "content": "Multiple compilation errors"
          },
          {
            "answer_id": 3,
            "content": "Compilation fails due to an error on line 2"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails due to an error on line 3"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails due to an error on line 4"
          },
          {
            "answer_id": 6,
            "content": "Compilation fails due to an error on line 9"
          }
        ]
      },
      {
        "content": "        Given two files:\n    \n        ```\n        1. package pkgA;\n        2. public class Foo {\n        3.   int a = 5;\n        4.   protected int b = 6;\n        5.   public int c = 7;\n        6. }\n        3. package pkgB;\n        4. import pkgA.*;\n        5. public class Baz {\n        6.   public static void main(String[] args) {\n        7.     Foo f = new Foo();\n        8.     System.out.print(\" \" + f.a);\n        9.     System.out.print(\" \" + f.b);\n       10.     System.out.println(\" \" + f.c);\n       11.   }\n       12. }\n       ```\n       \n       What is the result? (Choose all that apply.)",
        "question_id": 5,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "5 6 7"
          },
          {
            "answer_id": 2,
            "content": "5 followed by an exception"
          },
          {
            "answer_id": 3,
            "content": "Compilation fails with an error on line 7"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails with an error on line 8"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails with an error on line 9"
          },
          {
            "answer_id": 6,
            "content": "Compilation fails with an error on line 10"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    1. public class Electronic implements Device\n        { public void doIt() { } }\n    2.\n    3. abstract class Phone1 extends Electronic { }\n    4.\n    5. abstract class Phone2 extends Electronic\n         { public void doIt(int x) { } }\n    6.\n    7. class Phone3 extends Electronic implements Device\n         { public void doStuff() { } }\n    8.\n    9. interface Device { public void doIt(); }\n    ```\n    What is the result? (Choose all that apply.)",
        "question_id": 6,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Compilation succeeds"
          },
          {
            "answer_id": 2,
            "content": "Compilation fails with an error on line 1"
          },
          {
            "answer_id": 3,
            "content": "Compilation fails with an error on line 3"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails with an error on line 5"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails with an error on line 7"
          },
          {
            "answer_id": 6,
            "content": "Compilation fails with an error on line 9"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    4. class Announce {\n    5.   public static void main(String[] args) {\n    6.     for(int __x = 0; __x < 3; __x++) ;\n    7.     int #lb = 7;   \n    8.     long [] x [5]; \n    9.     Boolean []ba[];\n    10.  }\n    11. }\n    ```\n    What is the result? (Choose all that apply.)",
        "question_id": 7,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Compilation succeeds"
          },
          {
            "answer_id": 2,
            "content": "Compilation fails with an error on line 6"
          },
          {
            "answer_id": 3,
            "content": "Compilation fails with an error on line 7"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails with an error on line 8"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails with an error on line 9"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    3. public class TestDays {\n    4.   public enum Days { MON, TUE, WED };\n    5.   public static void main(String[] args) {\n    6.     for(Days d : Days.values() )\n    7.       ;\n    8.     Days [] d2 = Days.values();\n    9.     System.out.println(d2[2]);\n    10.  }\n    11.}\n    ```\n    What is the result? (Choose all that apply.)",
        "question_id": 8,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "TUE"
          },
          {
            "answer_id": 2,
            "content": "WED"
          },
          {
            "answer_id": 3,
            "content": "The output is unpredictable"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails due to an error on line 4"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails due to an error on line 6"
          },
          {
            "answer_id": 6,
            "content": "Compilation fails due to an error on line 8"
          },
          {
            "answer_id": 7,
            "content": "Compilation fails due to an error on line 9"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    4. public class Frodo extends Hobbit\n    5.   public static void main(String[] args) {\n    6.     int myGold = 7;                          \n    7.     System.out.println(countGold(myGold, 6));\n    8.   }\n    9. }\n    10.class Hobbit {\n    11.  int countGold(int x, int y) { return x + y; }\n    12.}\n    ```\n    What is the result?",
        "question_id": 9,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "13"
          },
          {
            "answer_id": 2,
            "content": "Compilation fails due to multiple errors"
          },
          {
            "answer_id": 3,
            "content": "Compilation fails due to an error on line 6"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails due to an error on line 7"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails due to an error on line 11"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    interface Gadget {\n      void doStuff();\n    }\n    abstract class Electronic {\n      void getPower() { System.out.print(\"plug in \"); }\n    }\n    public class Tablet extends Electronic implements Gadget {\n      void doStuff() { System.out.print(\"show book \"); }\n      public static void main(String[] args) {\n        new Tablet().getPower();\n        new Tablet().doStuff();\n      }\n    }\n    ```     \n    Which are true? (Choose all that apply.)",
        "question_id": 10,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "The class Tablet will NOT compile"
          },
          {
            "answer_id": 2,
            "content": "The interface Gadget will NOT compile"
          },
          {
            "answer_id": 3,
            "content": "The output will be plug in show book"
          },
          {
            "answer_id": 4,
            "content": "The abstract class Electronic will NOT compile"
          },
          {
            "answer_id": 5,
            "content": "The class Tablet CANNOT both extend and implement"
          }
        ]
      },
      {
        "content": "    Given that the Integer class is in the java.lang \n    package, and given:\n    ```\n    1. // insert code here\n    2. class StatTest {\n    3.   public static void main(String[] args) {\n    4.     System.out.println(Integer.MAX_VALUE);\n    5.   } \n    6. }\n    ```\n    Which, inserted independently at line 1, compiles? \n    (Choose all that apply.)",
        "question_id": 11,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "import static java.lang;"
          },
          {
            "answer_id": 2,
            "content": "import static java.lang.Integer;"
          },
          {
            "answer_id": 3,
            "content": "import static java.lang.Integer.*;"
          },
          {
            "answer_id": 4,
            "content": "static import java.lang.Integer.*;"
          },
          {
            "answer_id": 5,
            "content": "import static java.lang.Integer.MAX_VALUE;"
          },
          {
            "answer_id": 6,
            "content": "None of the above statements are valid import syntax"
          }
        ]
      }
    ]
  },
  {
    "exam_id": 1,
    "theme_id": 2,
    "theme_content": "Object Orientation",
    "questions": [
      {
        "content": "    Given:\n    ```\n    public abstract interface Frobnicate { \n        public void twiddle(String s); \n    }\n    ```\n    Which is a correct class?",
        "question_id": 1,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```\n    public abstract class Frob implements Frobnicate { \n        public abstract void twiddle(String s) { }\n    }\n    ```"
          },
          {
            "answer_id": 2,
            "content": "```\n    public abstract class Frob implements Frobnicate { }\n    ```"
          },
          {
            "answer_id": 3,
            "content": "```\n    public class Frob extends Frobnicate { \n        public void twiddle(Integer i) { }\n    }\n    ```"
          },
          {
            "answer_id": 4,
            "content": "```\n    public class Frob implements Frobnicate { \n        public void twiddle(Integer i) { }\n    }\n    ```"
          },
          {
            "answer_id": 5,
            "content": "```\n    public class Frob implements Frobnicate { \n        public void twiddle(String i) { } \n        public void twiddle(Integer s) { }\n    }\n    ```"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    class Top {\n        public Top(String s) { System.out.print(\"B\"); }\n    }\n    public class Bottom2 extends Top {\n        public Bottom2(String s) { System.out.print(\"D\"); }\n        public static void main(String [] args) {\n            new Bottom2(\"C\");\n            System.out.println(\" \");\n        }\n    }\n    ```\n    What is the result?",
        "question_id": 2,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "BD"
          },
          {
            "answer_id": 2,
            "content": "DB"
          },
          {
            "answer_id": 3,
            "content": "BDC"
          },
          {
            "answer_id": 4,
            "content": "DBC"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    class Clidder {\n        private final void flipper() { System.out.println(\"Clidder\"); }\n    }\n    public class Clidlet extends Clidder {\n        public final void flipper() { System.out.println(\"Clidlet\");  }\n        public static void main(String [] args) {\n            new Clidlet().flipper();\n        }\n    }   \n    ```\n    What is the result?",
        "question_id": 3,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Clidlet"
          },
          {
            "answer_id": 2,
            "content": "Clidder"
          },
          {
            "answer_id": 3,
            "content": "Clidder \nClidlet"
          },
          {
            "answer_id": 4,
            "content": "Clidlet \nClidder"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "       Given:\n       ```\n       class Bird {\n         { System.out.print(\"b1 \"); }\n         public Bird() { System.out.print(\"b2 \"); }\n       }\n       class Raptor extends Bird {\n         static { System.out.print(\"r1 \"); }\n         public Raptor() { System.out.print(\"r2 \"); }\n         { System.out.print(\"r3 \"); }\n         static { System.out.print(\"r4 \"); }\n       }\n       class Hawk extends Raptor {\n         public static void main(String[] args) {\n           System.out.print(\"pre \");\n           new Hawk();\n           System.out.println(\"hawk \");\n         } \n       }\n       ```\n       What is the result?",
        "question_id": 4,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "pre b1 b2 r3 r2 hawk"
          },
          {
            "answer_id": 2,
            "content": "pre b2 b1 r2 r3 hawk"
          },
          {
            "answer_id": 3,
            "content": "pre b2 b1 r2 r3 hawk r1 r4"
          },
          {
            "answer_id": 4,
            "content": "r1 r4 pre b1 b2 r3 r2 hawk"
          },
          {
            "answer_id": 5,
            "content": "r1 r4 pre b2 b1 r2 r3 hawk"
          },
          {
            "answer_id": 6,
            "content": "pre r1 r4 b1 b2 r3 r2 hawk"
          },
          {
            "answer_id": 7,
            "content": "pre r1 r4 b2 b1 r2 r3 hawk"
          },
          {
            "answer_id": 8,
            "content": "The order of output cannot be predicted"
          },
          {
            "answer_id": 9,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "    Given the following:\n    ```\n    1. class X { void do1() { } }\n    2. class Y extends X { void do2() { } }\n    3.\n    4. class Chrome {\n    5.   public static void main(String [] args) {\n    6.     X x1 = new X();                        \n    7.     X x2 = new Y();                        \n    8.     Y y1 = new Y();                        \n    9.     // insert code here                    \n    10.  } \n    11.}\n    ```\n    Which of the following, inserted at line 9, will compile? (Choose all that apply.)",
        "question_id": 5,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```x2.do2();```"
          },
          {
            "answer_id": 2,
            "content": "```(Y)x2.do2();```"
          },
          {
            "answer_id": 3,
            "content": "```((Y)x2).do2();```"
          },
          {
            "answer_id": 4,
            "content": "None of the above statements will compile"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    public class Locomotive {\n      Locomotive() { main(\"hi\"); }\n      public static void main(String[] args) {\n        System.out.print(\"2 \");\n      }\n      public static void main(String args) {\n        System.out.print(\"3 \" + args);\n      }\n    }\n    ```   \n    What is the result? (Choose all that apply.)",
        "question_id": 6,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "2 will be included in the output"
          },
          {
            "answer_id": 2,
            "content": "3 will be included in the output"
          },
          {
            "answer_id": 3,
            "content": "hi will be included in the output"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails"
          },
          {
            "answer_id": 5,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    3. class Dog {\n    4.   public void bark() { System.out.print(\"woof \"); }\n    5. }\n    6. class Hound extends Dog {\n    7.   public void sniff() { System.out.print(\"sniff \"); }\n    8.   public void bark() { System.out.print(\"howl \"); }\n    9. }\n    10.public class DogShow {\n    11.  public static void main(String[] args) { new DogShow().go(); } \n    12.  void go() {                                                    \n    13.    new Hound().bark();                                          \n    14.    ((Dog) new Hound()).bark();                                  \n    15.    ((Dog) new Hound()).sniff();                                 \n    16.  }                                                              \n    17.}\n    ```\n    What is the result? (Choose all that apply.)",
        "question_id": 7,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```howl howl sniff```"
          },
          {
            "answer_id": 2,
            "content": "```howl woof sniff```"
          },
          {
            "answer_id": 3,
            "content": "```howl howl``` followed by an exception"
          },
          {
            "answer_id": 4,
            "content": "```howl woof``` followed by an exception"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails with an error at line 14"
          },
          {
            "answer_id": 6,
            "content": "Compilation fails with an error at line 15"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    3. public class Redwood extends Tree {\n    4.   public static void main(String[] args) {\n    5.     new Redwood().go();\n    6.   }\n    7.   void go() {                                \n    8.     go2(new Tree(), new Redwood());          \n    9.     go2((Redwood) new Tree(), new Redwood());\n    10.  }\n    11.  void go2(Tree t1, Redwood r1) {\n    12.  Redwood r2 = (Redwood)t1;      \n    13.     Tree t2 = (Tree)r1;         \n    14.  }                              \n    15. }\n    16. class Tree { }\n    ```\n    What is the result? (Choose all that apply.)",
        "question_id": 8,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "An exception is thrown at runtime"
          },
          {
            "answer_id": 2,
            "content": "The code compiles and runs with no output"
          },
          {
            "answer_id": 3,
            "content": "Compilation fails with an error at line 8"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails with an error at line 9"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails with an error at line 12"
          },
          {
            "answer_id": 6,
            "content": "Compilation fails with an error at line 13"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    3. public class Tenor extends Singer {\n    4.   public static String sing() { return \"fa\"; }                  \n    5.   public static void main(String[] args) {                      \n    6.     Tenor t = new Tenor();                        \n    7.     Singer s = new Tenor();                       \n    8.     System.out.println(t.sing() + \" \" + s.sing());\n    9.   }\n    10. }\n    11. class Singer { public static String sing() { return \"la\"; } }\n    ```\n    What is the result?",
        "question_id": 9,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```fa fa```"
          },
          {
            "answer_id": 2,
            "content": "```fa la```"
          },
          {
            "answer_id": 3,
            "content": "```la la```"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails"
          },
          {
            "answer_id": 5,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "        Given:\n        ```\n         3. class Alpha {\n         4.   static String s = \" \";\n         5.   protected Alpha() { s += \"alpha \"; }\n         6. }\n         7. class SubAlpha extends Alpha {\n         8.   private SubAlpha() { s += \"sub \"; }\n         9. }\n        10. public class SubSubAlpha extends Alpha {\n        11.   private SubSubAlpha() { s += \"subsub \"; }\n        12.   public static void main(String[] args) {\n        13.     new SubSubAlpha();\n        14.     System.out.println(s);\n        15.   }\n        16. }\n        ```\n        What is the result?",
        "question_id": 10,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```subsub```"
          },
          {
            "answer_id": 2,
            "content": "```sub subsub```"
          },
          {
            "answer_id": 3,
            "content": "```alpha subsub```"
          },
          {
            "answer_id": 4,
            "content": "```alpha sub subsub```"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails"
          },
          {
            "answer_id": 6,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    3. class Building {\n    4.   Building() {  System.out.print(\"b \");  }\n    5.   Building(String name) {\n    6.     this();   System.out.print(\"hn \" + name);\n    7.   }\n    8. }\n    9. public class House extends Building {\n    10.   House() {  System.out.print(\"h \");  }\n    11.   House(String name) {\n    12.     this();   System.out.print(\"hn \" + name);\n    13.   }\n    14.   public static void main(String[] args) { new House(\"x \"); }\n    15.}\n    ```\n    What is the result?",
        "question_id": 11,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```h hn x```"
          },
          {
            "answer_id": 2,
            "content": "```hn x h```"
          },
          {
            "answer_id": 3,
            "content": "```b h hn x```"
          },
          {
            "answer_id": 4,
            "content": "```b hn x h```"
          },
          {
            "answer_id": 5,
            "content": "```bn x h hn x```"
          },
          {
            "answer_id": 6,
            "content": "```b bn x h hn x```"
          },
          {
            "answer_id": 7,
            "content": "```bn x b h hn x```"
          },
          {
            "answer_id": 8,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n     3. class Mammal {\n     4.   String name = \"furry \";\n     5.   String makeNoise() { return \"generic noise\"; }\n     6. }\n     7. class Zebra extends Mammal {\n     8.   String name = \"stripes \";\n     9.   String makeNoise() { return \"bray\"; }\n    10. }\n    11. public class ZooKeeper {\n    12.   public static void main(String[] args) { new ZooKeeper().go(); }\n    13.   void go() {                                                     \n    14.     Mammal m = new Zebra();                                       \n    15.     System.out.println(m.name + m.makeNoise());                   \n    16.   }                                                               \n    17. }\n    ```\n    What is the result?",
        "question_id": 12,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "furry bray"
          },
          {
            "answer_id": 2,
            "content": "stripes bray"
          },
          {
            "answer_id": 3,
            "content": "furry generic noise"
          },
          {
            "answer_id": 4,
            "content": "stripes generic noise"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails"
          },
          {
            "answer_id": 6,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "You're designing a new online board game in which ```Floozels``` are a type of ```Jammers, Jammers``` can have ```Quizels, Quizels``` are a type of ```Klakker```, and ```Floozels``` can have several ```Floozets```. Which of the following fragments represent this design? (Choose all that apply.)",
        "question_id": 13,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```\n    import java.util.*; \n        interface Klakker { }\n        class Jammer { Set<Quizel> q; }\n        class Quizel implements Klakker { }\n        public class Floozel extends Jammer { List<Floozet> f; }\n        interface Floozet { }\n    ```"
          },
          {
            "answer_id": 2,
            "content": "```\n    import java.util.*;\n        class Klakker { Set<Quizel> q; } \n        class Quizel extends Klakker { } \n        class Jammer { List<Floozel> f; } \n        class Floozet extends Floozel { }\n        public class Floozel { Set<Klakker> k; }\n    ```"
          },
          {
            "answer_id": 3,
            "content": "```\n    import java.util.*; class Floozet { }\n        class Quizel implements Klakker { }\n        class Jammer { List<Quizel> q; }\n        interface Klakker { }\n        class Floozel extends Jammer { List<Floozet> f; }\n    ```"
          },
          {
            "answer_id": 4,
            "content": "```\n    import java.util.*;\n        interface Jammer extends Quizel { }\n        interface Klakker { }\n        interface Quizel extends Klakker { } \n        interface Floozel extends Jammer, Floozet { } \n        interface Floozet { }\n    ```"
          }
        ]
      }
    ]
  },
  {
    "exam_id": 1,
    "theme_id": 3,
    "theme_content": "Assignments",
    "questions": [
      {
        "content": "    Given:\n    ```\n    class CardBoard {\n      Short story = 200;\n      CardBoard go(CardBoard cb) {\n        cb = null;\n        return cb; \n      }\n      public static void main(String[] args) {\n        CardBoard c1 = new CardBoard();\n        CardBoard c2 = new CardBoard();\n        CardBoard c3 = c1.go(c2);\n        c1 = null;\n        // do Stuff \n      }\n    }\n    ```\n    When // do Stuff is reached, how many objects \n    are eligible for garbage collection?",
        "question_id": 1,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "0"
          },
          {
            "answer_id": 2,
            "content": "1"
          },
          {
            "answer_id": 3,
            "content": "2"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails"
          },
          {
            "answer_id": 5,
            "content": "It is not possible to know"
          },
          {
            "answer_id": 6,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    public class Fishing {\n      byte b1 = 4;\n      int i1 = 123456;\n      long L1 = (long)i1;    // line A\n      short s2 = (short)i1;  // line B\n      byte b2 = (byte)i1;    // line C\n      int i2 = (int)123.456; // line D\n      byte b3 = b1 + 7;      // line E\n    }\n    ```\n    Which lines WILL NOT compile? (Choose all that apply.)",
        "question_id": 2,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Line A"
          },
          {
            "answer_id": 2,
            "content": "Line B"
          },
          {
            "answer_id": 3,
            "content": "Line C"
          },
          {
            "answer_id": 4,
            "content": "Line D"
          },
          {
            "answer_id": 5,
            "content": "Line E"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    public class Literally {\n      public static void main(String[] args) {\n        int i1 = 1_000;      // line A\n        int i2 = 10_00;      // line B\n        int i3 = _10_000;    // line C\n        int i4 = 0b101010;   // line D\n        int i5 = 0B10_1010;  // line E\n        int i6 = 0x2_a;      // line F\n      } \n    }\n    ```\n    Which lines WILL NOT compile? (Choose all that apply.)",
        "question_id": 3,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Line A"
          },
          {
            "answer_id": 2,
            "content": "Line B"
          },
          {
            "answer_id": 3,
            "content": "Line C"
          },
          {
            "answer_id": 4,
            "content": "Line D"
          },
          {
            "answer_id": 5,
            "content": "Line E"
          },
          {
            "answer_id": 6,
            "content": "Line F"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    class Mixer {\n      Mixer() { }\n      Mixer(Mixer m) { m1 = m; }\n      Mixer m1;\n      public static void main(String[] args) {\n        Mixer m2 = new Mixer();\n        Mixer m3 = new Mixer(m2);  m3.go();\n        Mixer m4 = m3.m1;          m4.go();\n        Mixer m5 = m2.m1;          m5.go();\n      }\n      void go() { System.out.print(\"hi \"); }\n    }\n    ```\n    What is the result?",
        "question_id": 4,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "hi"
          },
          {
            "answer_id": 2,
            "content": "hi hi"
          },
          {
            "answer_id": 3,
            "content": "hi hi hi"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails"
          },
          {
            "answer_id": 5,
            "content": "hi, followed by an exception"
          },
          {
            "answer_id": 6,
            "content": "hi hi, followed by an exception"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    class Fizz {\n      int x = 5;\n      public static void main(String[] args) {\n        final Fizz f1 = new Fizz();\n        Fizz f2 = new Fizz();\n        Fizz f3 = FizzSwitch(f1,f2);\n        System.out.println((f1 == f3) + \" \" + (f1.x == f3.x));\n      }\n      static Fizz FizzSwitch(Fizz x, Fizz y) {\n        final Fizz z = x;\n        z.x = 6;\n        return z;\n      }\n    }\n    ```\n    What is the result?",
        "question_id": 5,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "true true"
          },
          {
            "answer_id": 2,
            "content": "false true"
          },
          {
            "answer_id": 3,
            "content": "true false"
          },
          {
            "answer_id": 4,
            "content": "false false"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails"
          },
          {
            "answer_id": 6,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    public class Mirror {\n      int size = 7;\n      public static void main(String[] args) {\n        Mirror m1 = new Mirror();\n        Mirror m2 = m1;\n        int i1 = 10;\n        int i2 = i1;\n        go(m2, i2);\n        System.out.println(m1.size + \" \" + i1);\n      }\n      static void go(Mirror m, int i) {\n        m.size = 8;\n        i = 12;\n      } \n    }\n    ```\n    What is the result? ",
        "question_id": 6,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "7 10"
          },
          {
            "answer_id": 2,
            "content": "8 10"
          },
          {
            "answer_id": 3,
            "content": "7 12"
          },
          {
            "answer_id": 4,
            "content": "8 12"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails"
          },
          {
            "answer_id": 6,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    public class Wind {\n      int id;\n      Wind(int i) { id = i; }\n      public static void main(String[] args) {\n        new Wind(3).go();\n        // commented line\n      }\n      void go() {\n        Wind w1 = new Wind(1);\n        Wind w2 = new Wind(2);\n        System.out.println(w1.id + \" \" + w2.id);\n      } \n    }\n    ```\n    When execution reaches the commented line, \n    which are true? (Choose all that apply.)",
        "question_id": 7,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "The output contains 1"
          },
          {
            "answer_id": 2,
            "content": "The output contains 2"
          },
          {
            "answer_id": 3,
            "content": "The output contains 3"
          },
          {
            "answer_id": 4,
            "content": "Zero objects are eligible for garbage collection"
          },
          {
            "answer_id": 5,
            "content": "One object is eligible for garbage collection"
          },
          {
            "answer_id": 6,
            "content": "Two objects are eligible for garbage collection"
          },
          {
            "answer_id": 7,
            "content": "Three objects are eligible for garbage collection"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    3. public class Ouch {\n    4.   static int ouch = 7;\n    5.   public static void main(String[] args) {\n    6.     new Ouch().go(ouch);\n    7.     System.out.print(\" \" + ouch);\n    8.   }\n    9.   void go(int ouch) {                  \n   10.     ouch++;                            \n   11.     for(int ouch = 3; ouch < 6; ouch++)\n   12.       ;                                \n   13.     System.out.print(\" \" + ouch);      \n   14.   }                                    \n   15. }   \n   ```                                   \n   What is the result?",
        "question_id": 8,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "5 7"
          },
          {
            "answer_id": 2,
            "content": "5 8"
          },
          {
            "answer_id": 3,
            "content": "8 7"
          },
          {
            "answer_id": 4,
            "content": "8 8"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails"
          },
          {
            "answer_id": 6,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    public class Happy {\n      int id;\n      Happy(int i) { id = i; }\n      public static void main(String[] args) {\n        Happy h1 = new Happy(1);\n        Happy h2 = h1.go(h1);\n        System.out.println(h2.id);\n      }\n      Happy go(Happy h) {\n        Happy h3 = h;\n        h3.id = 2;\n        h1.id = 3;\n        return h1;\n      } \n    }\n    ```\n    What is the result?",
        "question_id": 9,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "1"
          },
          {
            "answer_id": 2,
            "content": "2"
          },
          {
            "answer_id": 3,
            "content": "3"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails"
          },
          {
            "answer_id": 5,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    public class Network {\n       Network(int x, Network n) {\n         id = x;\n         p = this;\n         if(n != null) p = n;\n       }\n       int id;\n       Network p;\n       public static void main(String[] args) {\n         Network n1 = new Network(1, null);\n         n1.go(n1); \n       }\n       void go(Network n1) {\n         Network n2 = new Network(2, n1);\n         Network n3 = new Network(3, n2);\n         System.out.println(n3.p.p.id);\n       } \n    }\n    ```\n    What is the result?",
        "question_id": 10,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "1"
          },
          {
            "answer_id": 2,
            "content": "2"
          },
          {
            "answer_id": 3,
            "content": "3"
          },
          {
            "answer_id": 4,
            "content": "null"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n     3. class Beta { }\n     4. class Alpha {\n     5.   static Beta b1;\n     6. Beta b2;\n     7. }\n     8. public class Tester {\n     9.   public static void main(String[] args) {\n    10.     Beta b1 = new Beta();     Beta b2 = new Beta();\n    11.     Alpha a1 = new Alpha();   Alpha a2 = new Alpha();\n    12.     a1.b1 = b1;\n    13.     a1.b2 = b1;\n    14.     a2.b2 = b2;\n    15.     a1 = null;  b1 = null;  b2 = null;\n    16.     // do stuff\n    17. }\n    18. }\n    ```\n    When line 16 is reached, how many objects \n    will be eligible for garbage collection?",
        "question_id": 11,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "0"
          },
          {
            "answer_id": 2,
            "content": "1"
          },
          {
            "answer_id": 3,
            "content": "2"
          },
          {
            "answer_id": 4,
            "content": "3"
          },
          {
            "answer_id": 5,
            "content": "4"
          },
          {
            "answer_id": 6,
            "content": "5"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    public class Telescope {\n      static int magnify = 2;\n      public static void main(String[] args) {\n        go(); \n      }\n      static void go() {\n        int magnify = 3;\n        zoomIn();\n      }\n      static void zoomIn() {\n        magnify *= 5;\n        zoomMore(magnify);\n        System.out.println(magnify);\n      }\n      static void zoomMore(int magnify) {\n        magnify *= 7;\n      }\n    }\n    ```\n    What is the result?",
        "question_id": 12,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "2"
          },
          {
            "answer_id": 2,
            "content": "10"
          },
          {
            "answer_id": 3,
            "content": "15"
          },
          {
            "answer_id": 4,
            "content": "30"
          },
          {
            "answer_id": 5,
            "content": "70"
          },
          {
            "answer_id": 6,
            "content": "105"
          },
          {
            "answer_id": 7,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    3. public class Dark {\n    4.   int x = 3;\n    5.   public static void main(String[] args) {\n    6.     new Dark().go1();\n    7.   }\n    8.   void go1() {\n    9.     int x;\n    10.    go2(++x); \n    11.  }\n    12.  void go2(int y) {\n    13.    int x = ++y;\n    14.    System.out.println(x);\n    15.  }\n    16.}\n    ```\n    What is the result?",
        "question_id": 13,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "2"
          },
          {
            "answer_id": 2,
            "content": "3"
          },
          {
            "answer_id": 3,
            "content": "4"
          },
          {
            "answer_id": 4,
            "content": "5"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails"
          },
          {
            "answer_id": 6,
            "content": "An exception is thrown at runtime"
          }
        ]
      }
    ]
  },
  {
    "exam_id": 1,
    "theme_id": 4,
    "theme_content": "Operations",
    "questions": [
      {
        "content": "    Given:\n    ```\n    class Hexy {\n      public static void main(String[] args) {\n        int i = 42;\n        String s = (i<40)?\"life\":(i>50)?\"universe\":\"everything\";\n        System.out.println(s);\n      } \n    }\n    ```    \n    What is the result?",
        "question_id": 1,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "null"
          },
          {
            "answer_id": 2,
            "content": "life"
          },
          {
            "answer_id": 3,
            "content": "universe"
          },
          {
            "answer_id": 4,
            "content": "everything"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails"
          },
          {
            "answer_id": 6,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    public class Dog {\n      String name;\n      Dog(String s) { name = s; }\n      public static void main(String[] args) {\n         Dog d1 = new Dog(\"Boi\");\n         Dog d2 = new Dog(\"Tyri\");\n         System.out.print((d1 == d2) + \" \");\n         Dog d3 = new Dog(\"Boi\");\n         d2 = d1;\n         System.out.print((d1 == d2) + \" \");\n         System.out.print((d1 == d3) + \" \");\n      } \n    }\n    ```\n    What is the result?",
        "question_id": 2,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "true true true"
          },
          {
            "answer_id": 2,
            "content": "true true false"
          },
          {
            "answer_id": 3,
            "content": "false true false"
          },
          {
            "answer_id": 4,
            "content": "false true true"
          },
          {
            "answer_id": 5,
            "content": "false false false"
          },
          {
            "answer_id": 6,
            "content": "An exception will be thrown at runtime"
          }
        ]
      },
      {
        "content": "Given:\n    ```\n    class Fork {\n      public static void main(String[] args) {\n        if(args.length == 1 | args[1].equals(\"test\")) {\n          System.out.println(\"test case\");\n        } else {\n          System.out.println(\"production \" + args[0]);\n        } \n      }\n    }\n    ```    \n    And the command-line invocation:\n    ```\n    java Fork live2\n    ```\n    What is the result?",
        "question_id": 3,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "test case"
          },
          {
            "answer_id": 2,
            "content": "production live2"
          },
          {
            "answer_id": 3,
            "content": "test case live2"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails"
          },
          {
            "answer_id": 5,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    class Feline {\n      public static void main(String[] args) {\n        long x = 42L;\n        long y = 44L;\n        System.out.print(\" \" + 7 + 2 + \" \");\n        System.out.print(foo() + x + 5 + \" \");\n        System.out.println(x + y + foo());\n      }\n      static String foo() { return \"foo\"; }\n    }\n    ```\n    What is the result?",
        "question_id": 4,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "9 foo47 86foo"
          },
          {
            "answer_id": 2,
            "content": "9 foo47 4244foo"
          },
          {
            "answer_id": 3,
            "content": "9 foo425 86foo"
          },
          {
            "answer_id": 4,
            "content": "9 foo425 4244foo"
          },
          {
            "answer_id": 5,
            "content": "72 foo47 86foo"
          },
          {
            "answer_id": 6,
            "content": "72 foo47 4244foo"
          },
          {
            "answer_id": 7,
            "content": "72 foo425 86foo"
          },
          {
            "answer_id": 8,
            "content": "72 foo425 4244foo"
          },
          {
            "answer_id": 9,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    public class Cowboys {\n      public static void main(String[] args) {\n        int x = 12;\n        int a = 5;\n        int b = 7;\n        System.out.println(x/a + \" \" + x/b);\n      } \n    }\n    ```\n    What is the result? (Choose all that apply.)",
        "question_id": 5,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "2 1"
          },
          {
            "answer_id": 2,
            "content": "2 2"
          },
          {
            "answer_id": 3,
            "content": "3 1"
          },
          {
            "answer_id": 4,
            "content": "3 2"
          },
          {
            "answer_id": 5,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    3. public class McGee {\n    4.   public static void main(String[] args) {\n    5.     Days d1 = Days.TH;\n    6.     Days d2 = Days.M;\n    7.     for(Days d: Days.values()) {\n    8.       if(d.equals(Days.F)) break;\n    9.       d2 = d;\n    10.    }\n    11.    System.out.println((d1 == d2)?\"same old\" : \"newly new\");\n    12.  }\n    13.  enum Days {M, T, W, TH, F, SA, SU};\n    14.}\n    ```\n    What is the result?",
        "question_id": 6,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "same old"
          },
          {
            "answer_id": 2,
            "content": "newly new"
          },
          {
            "answer_id": 3,
            "content": "Compilation fails due to multiple errors"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails due only to an error on line 7"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails due only to an error on line 8"
          },
          {
            "answer_id": 6,
            "content": "Compilation fails due only to an error on line 11"
          },
          {
            "answer_id": 7,
            "content": "Compilation fails due only to an error on line 13"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n     4. public class SpecialOps {\n     5.   public static void main(String[] args) {\n     6.     String s = \"\";\n     7.     boolean b1 = true;\n     8.     boolean b2 = false;\n     9.     if((b2 = false) | (21%5) > 2) s += \"x\";\n    10.     if(b1 || (b2 == true))        s += \"y\";\n    11.     if(b2 == true)                s += \"z\";\n    12.     System.out.println(s);\n    13.   }\n    14. }\n    ```\n    Which are true? (Choose all that apply.)",
        "question_id": 7,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Compilation fails"
          },
          {
            "answer_id": 2,
            "content": "x will be included in the output"
          },
          {
            "answer_id": 3,
            "content": "y will be included in the output"
          },
          {
            "answer_id": 4,
            "content": "z will be included in the output"
          },
          {
            "answer_id": 5,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n     3. public class Spock {\n     4.   public static void main(String[] args) {                       \n     5.     int mask = 0;                                                  \n     6.     int count = 0;                                                \n     7.     if( ((5<7) || (++count < 10)) | mask++ < 10 )   mask = mask + 1;\n     8.     if( (6>8)^false)                                mask=mask+10;\n     9.     if( !(mask > 1) && ++count > 1)                 mask = mask + 100;\n    10.     System.out.println(mask + \" \" + count);             \n    11.   }\n    12. }\n    ```\n    Which two are true about the value of mask and the value of count at line 10? (Choose two.)",
        "question_id": 8,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "mask is 0"
          },
          {
            "answer_id": 2,
            "content": "mask is 1"
          },
          {
            "answer_id": 3,
            "content": "mask is 2"
          },
          {
            "answer_id": 4,
            "content": "mask is 10"
          },
          {
            "answer_id": 5,
            "content": "mask is greater than 10"
          },
          {
            "answer_id": 6,
            "content": "count is 0"
          },
          {
            "answer_id": 7,
            "content": "count is greater than 0"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n     3. interface Vessel { }\n     4. interface Toy { }\n     5. class Boat implements Vessel { }\n     6. class Speedboat extends Boat implements Toy { }\n     7. public class Tree {\n     8.   public static void main(String[] args) {\n     9.     String s = \"0\";\n    10.     Boat b = new Boat();\n    11.     Boat b2 = new Speedboat();\n    12.     Speedboat s2 = new Speedboat();\n    13.     if((b instanceof Vessel) && (b2 instanceof Toy))  s += \"1\";\n    14.     if((s2 instanceof Vessel) && (s2 instanceof Toy)) s += \"2\";\n    15.     System.out.println(s);\n    16.   }\n    17. }\n    ```\n    What is the result?",
        "question_id": 9,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "0"
          },
          {
            "answer_id": 2,
            "content": "01"
          },
          {
            "answer_id": 3,
            "content": "02"
          },
          {
            "answer_id": 4,
            "content": "012"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails"
          },
          {
            "answer_id": 6,
            "content": "An exception is thrown at runtime"
          }
        ]
      }
    ]
  },
  {
    "exam_id": 1,
    "theme_id": 5,
    "theme_content": "String, Arrays and ArrayLists",
    "questions": [
      {
        "content": "    Given:\n    ```\n    public class Mutant {\n      public static void main(String[] args) {\n        StringBuilder sb = new StringBuilder(\"abc\");\n        String s = \"abc\";\n        sb.reverse().append(\"d\");\n        s.toUpperCase().concat(\"d\");\n        System.out.println(\".\" + sb + \". .\" + s + \".\");\n      } \n    }\n    ```\n    Which two substrings will be included in the result? (Choose two.)",
        "question_id": 1,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": ".abc."
          },
          {
            "answer_id": 2,
            "content": ".ABCd."
          },
          {
            "answer_id": 3,
            "content": ".ABCD."
          },
          {
            "answer_id": 4,
            "content": ".cbad."
          },
          {
            "answer_id": 5,
            "content": ".dcba."
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    public class Hilltop {\n      public static void main(String[] args) {\n        String[] horses = new String[5];\n        horses[4] = null;\n        for(int i = 0; i < horses.length; i++) {\n          if(i < args.length)\n            horses[i] = args[i];\n          System.out.print(horses[i].toUpperCase() + \" \");\n        }\n      } \n    }\n    ```    \n    And, if the code compiles, the command line:\n    ```\n    java Hilltop eyra vafi draumur kara\n    ```\n    What is the result?",
        "question_id": 2,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "EYRA VAFI DRAUMUR KARA"
          },
          {
            "answer_id": 2,
            "content": "EYRA VAFI DRAUMUR KARA null"
          },
          {
            "answer_id": 3,
            "content": "An exception is thrown with no other output"
          },
          {
            "answer_id": 4,
            "content": "EYRA VAFI DRAUMUR KARA, and then a NullPointerException"
          },
          {
            "answer_id": 5,
            "content": "EYRA VAFI DRAUMUR KARA, and then an ArrayIndexOutOfBoundsException"
          },
          {
            "answer_id": 6,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    public class Actors {\n      public static void main(String[] args) {\n        char[] ca = {0x4e, \\u004e, 78};\n        System.out.println((ca[0] == ca[1]) + \" \" + (ca[0] == ca[2]));\n      }\n    }\n    ```\n    What is the result?",
        "question_id": 3,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "true true"
          },
          {
            "answer_id": 2,
            "content": "true false"
          },
          {
            "answer_id": 3,
            "content": "false true"
          },
          {
            "answer_id": 4,
            "content": "false false"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    1. class Dims {\n    2.   public static void main(String[] args) {\n    3.     int[][] a = {{1,2}, {3,4}};\n    4.     int[] b = (int[]) a[1];    \n    5.     Object o1 = a;             \n    6.     int[][] a2 = (int[][]) o1;\n    7.     int[] b2 = (int[]) o1;\n    8.     System.out.println(b[1]);\n    9. } }\n    ```\n    What is the result? (Choose all that apply.)",
        "question_id": 4,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "2"
          },
          {
            "answer_id": 2,
            "content": "4"
          },
          {
            "answer_id": 3,
            "content": "An exception is thrown at runtime"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails due to an error on line 4"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails due to an error on line 5"
          },
          {
            "answer_id": 6,
            "content": "Compilation fails due to an error on line 6"
          },
          {
            "answer_id": 7,
            "content": "Compilation fails due to an error on line 7"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    import java.util.*;\n    public class Sequence {\n      public static void main(String[] args) {\n        ArrayList<String> myList = new ArrayList<String>();\n        myList.add(\"apple\");\n        myList.add(\"carrot\");\n        myList.add(\"banana\");\n        myList.add(1, \"plum\");\n        System.out.print(myList);\n      } \n    }\n    ```\n    What is the result?",
        "question_id": 5,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "[apple, banana, carrot, plum]"
          },
          {
            "answer_id": 2,
            "content": "[apple, plum, carrot, banana]"
          },
          {
            "answer_id": 3,
            "content": "[apple, plum, banana, carrot]"
          },
          {
            "answer_id": 4,
            "content": "[plum, banana, carrot, apple]"
          },
          {
            "answer_id": 5,
            "content": "[plum, apple, carrot, banana]"
          },
          {
            "answer_id": 6,
            "content": "[banana, plum, carrot, apple]"
          },
          {
            "answer_id": 7,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n     3. class Dozens {\n     4.   int[] dz = {1,2,3,4,5,6,7,8,9,10,11,12};\n     5. }\n     6. public class Eggs {\n     7.   public static void main(String[] args) {\n     8.     Dozens [] da = new Dozens[3];\n     9.     da[0] = new Dozens();\n    10.     Dozens d = new Dozens();\n    11.     da[1] = d;\n    12.     d = null;\n    13.     da[1] = null;\n    14.     // do stuff\n    15.   }\n    16. }\n    ```\n    Which two are true about the objects created within \n    main(), and which are eligible for garbage collection \n    when line 14 is reached?",
        "question_id": 6,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Three objects were created"
          },
          {
            "answer_id": 2,
            "content": "Four objects were created"
          },
          {
            "answer_id": 3,
            "content": "Five objects were created"
          },
          {
            "answer_id": 4,
            "content": "Zero objects are eligible for GC"
          },
          {
            "answer_id": 5,
            "content": "One object is eligible for GC"
          },
          {
            "answer_id": 6,
            "content": "Two objects are eligible for GC"
          },
          {
            "answer_id": 7,
            "content": "Three objects are eligible for GC"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    public class Tailor {\n      public static void main(String[] args) {\n        byte[][] ba = {{1,2,3,4}, {1,2,3}};\n        System.out.println(ba[1].length + \" \" + ba.length);\n      }\n    }\n    ```\n    What is the result?",
        "question_id": 7,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "2 4"
          },
          {
            "answer_id": 2,
            "content": "2 7"
          },
          {
            "answer_id": 3,
            "content": "3 2"
          },
          {
            "answer_id": 4,
            "content": "3 7"
          },
          {
            "answer_id": 5,
            "content": "4 2"
          },
          {
            "answer_id": 6,
            "content": "4 7"
          },
          {
            "answer_id": 7,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    3. public class Theory {\n    4.   public static void main(String[] args) {\n    5.     String s1 = \"abc\";\n    6.     String s2 = s1;\n    7.     s1 += \"d\";\n    8.     System.out.println(s1 + \" \" + s2 + \" \" + (s1==s2));\n    9.\n   10.     StringBuilder sb1 = new StringBuilder(\"abc\");\n   11.     StringBuilder sb2 = sb1;\n   12.     sb1.append(\"d\");\n   13.     System.out.println(sb1 + \" \" + sb2 + \" \" + (sb1==sb2));\n   14.   }\n   15. }\n    ```\n    Which are true? (Choose all that apply.)",
        "question_id": 8,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Compilation fails"
          },
          {
            "answer_id": 2,
            "content": "The first line of output is abc abc true"
          },
          {
            "answer_id": 3,
            "content": "The first line of output is abc abc false"
          },
          {
            "answer_id": 4,
            "content": "The first line of output is abcd abc false"
          },
          {
            "answer_id": 5,
            "content": "The second line of output is abcd abc false"
          },
          {
            "answer_id": 6,
            "content": "The second line of output is abcd abcd true"
          },
          {
            "answer_id": 7,
            "content": "The second line of output is abcd abcd false"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    public class Mounds {\n      public static void main(String[] args) {\n        StringBuilder sb = new StringBuilder();\n        String s = new String();\n        for(int i = 0; i < 1000; i++) {\n          s = \" \" + i;\n          sb.append(s);\n        }\n        // done with loop\n      }\n    }\n    ```\n    If the garbage collector does NOT run while \n    this code is executing, approximately how many \n    objects will exist in memory when the loop is done?",
        "question_id": 9,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Less than 10"
          },
          {
            "answer_id": 2,
            "content": "About 1000"
          },
          {
            "answer_id": 3,
            "content": "About 2000"
          },
          {
            "answer_id": 4,
            "content": "About 3000"
          },
          {
            "answer_id": 5,
            "content": "About 4000"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    3. class Box {\n    4.   int size;\n    5.   Box(int s) { size = s; }\n    6. }\n    7. public class Laser {\n    8.   public static void main(String[] args) {\n    9.     Box b1 = new Box(5);                  \n    10.    Box[] ba = go(b1, new Box(6));        \n    11.    ba[0] = b1;                           \n    12.    for(Box b : ba) System.out.print(b.size + \" \");\n    13.  }\n    14.  static Box[] go(Box b1, Box b2) {\n    15.     b1.size = 4;                  \n    16.     Box[] ma = {b2, b1};          \n    17.     return ma;                      \n    18.  }\n    19. }\n    ```\n    What is the result?",
        "question_id": 10,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "4 4"
          },
          {
            "answer_id": 2,
            "content": "5 4"
          },
          {
            "answer_id": 3,
            "content": "6 4"
          },
          {
            "answer_id": 4,
            "content": "4 5"
          },
          {
            "answer_id": 5,
            "content": "5 5"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n    public class Hedges {\n      public static void main(String[] args) {\n        String s = \"JAVA\";\n        s = s + \"rocks\";\n        s = s.substring(4,8);\n        s.toUpperCase();\n        System.out.println(s);\n      } \n    }\n    ```\n    What is the result?",
        "question_id": 11,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "JAVA"
          },
          {
            "answer_id": 2,
            "content": "JAVAROCKS"
          },
          {
            "answer_id": 3,
            "content": "rocks"
          },
          {
            "answer_id": 4,
            "content": "rock"
          },
          {
            "answer_id": 5,
            "content": "ROCKS"
          },
          {
            "answer_id": 6,
            "content": "ROCK"
          },
          {
            "answer_id": 7,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "    Given:\n    ```\n     1. import java.util.*;\n     2. class Fortress {\n     3.   private String name;\n     4.   private ArrayList<Integer> list;\n     5.   Fortress() { list = new ArrayList<Integer>(); }\n     6.\n     7.   String getName() { return name; }\n     8.   void addToList(int x) { list.add(x); }\n     9.   ArrayList getList() { return list; }\n    10. }\n    ```\n    Which lines of code (if any) break encapsulation? (Choose all that apply.)",
        "question_id": 12,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Line 3"
          },
          {
            "answer_id": 2,
            "content": "Line 4"
          },
          {
            "answer_id": 3,
            "content": "Line 5"
          },
          {
            "answer_id": 4,
            "content": "Line 7"
          },
          {
            "answer_id": 5,
            "content": "Line 8"
          },
          {
            "answer_id": 6,
            "content": "Line 9"
          },
          {
            "answer_id": 7,
            "content": "The class is already well encapsulated"
          }
        ]
      }
    ]
  },
  {
    "exam_id": 1,
    "theme_id": 6,
    "theme_content": "Flow Control and Exceptions",
    "questions": [
      {
        "content": "    Given:\n    ```\n    public class Flipper {\n      public static void main(String[] args) {\n        String o = \"-\";\n        switch(\"FRED\".toLowerCase().substring(1,3)) {\n          case \"yellow\":\n            o += \"y\";\n          case \"red\":\n            o += \"r\";\n          case \"green\":\n            o += \"g\";\n        }\n        System.out.println(o);\n      }\n    }\n    ```\n    What is the result? ",
        "question_id": 1,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "-"
          },
          {
            "answer_id": 2,
            "content": "-r"
          },
          {
            "answer_id": 3,
            "content": "-rg"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails"
          },
          {
            "answer_id": 5,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "Given:\n```\nclass Plane {\n  static String s = \"-\";\n  public static void main(String[] args) {\n    new Plane().s1();\n    System.out.println(s);\n  }\n  void s1() {\n    try { s2(); }\n    catch (Exception e) { s += \"c\"; }\n  }\n  void s2() throws Exception  {\n    s3();  s += \"2\";\n    s3();  s += \"2b\";\n  }\n  void s3() throws Exception {\n    throw new Exception();\n  } \n}\n```       \nWhat is the result?",
        "question_id": 2,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "-"
          },
          {
            "answer_id": 2,
            "content": "-c"
          },
          {
            "answer_id": 3,
            "content": "-c2"
          },
          {
            "answer_id": 4,
            "content": "-2c"
          },
          {
            "answer_id": 5,
            "content": "-c22b"
          },
          {
            "answer_id": 6,
            "content": "-2c2b"
          },
          {
            "answer_id": 7,
            "content": "-2c2bc"
          },
          {
            "answer_id": 8,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "Given:\n```\ntry { int x = Integer.parseInt(\"two\"); }\n```\nWhich could be used to create an appropriate \ncatch block? (Choose all that apply.)  ",
        "question_id": 3,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "ClassCastException"
          },
          {
            "answer_id": 2,
            "content": "IllegalStateException"
          },
          {
            "answer_id": 3,
            "content": "NumberFormatException"
          },
          {
            "answer_id": 4,
            "content": "IllegalArgumentException"
          },
          {
            "answer_id": 5,
            "content": "ExceptionInInitializerError"
          },
          {
            "answer_id": 6,
            "content": "ArrayIndexOutOfBoundsException"
          }
        ]
      },
      {
        "content": "Given:\n```\npublic class Flip2 {\n  public static void main(String[] args) {\n    String o = \"-\";\n    String[] sa = new String[4];\n    for(int i = 0; i < args.length; i++)\n      sa[i] = args[i];\n    for(String n: sa) {\n      switch(n.toLowerCase()) {\n        case \"yellow\": o += \"y\";\n        case \"red\":    o += \"r\";\n        case \"green\":  o += \"g\";\n      } \n    }\n    System.out.print(o);\n  }\n}\n```\nAnd given the command-line invocation:\n```\nJava Flip2 RED Green YeLLow \n```\nWhich are true? (Choose all that apply.)",
        "question_id": 4,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "The string rgy will appear somewhere in the output"
          },
          {
            "answer_id": 2,
            "content": "The string rgg will appear somewhere in the output"
          },
          {
            "answer_id": 3,
            "content": "The string gyr will appear somewhere in the output\n"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails"
          },
          {
            "answer_id": 5,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "Given:\n```\n1. class Loopy {\n2.  public static void main(String[] args) {                                    \n3.    int[] x = {7,6,5,4,3,2,1};                                                \n4.       // insert code here                                                       \n5.       System.out.print(y + \" \");                                  \n6.    }\n7.  }\n8.}\n```\nWhich, inserted independently at line 4, compiles? (Choose all that apply.)",
        "question_id": 5,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "for(int y : x) {"
          },
          {
            "answer_id": 2,
            "content": "for(x : int y) {"
          },
          {
            "answer_id": 3,
            "content": "int y = 0; for(y : x) {"
          },
          {
            "answer_id": 4,
            "content": "for(int y=0, z=0; z<x.length; z++) { y = x[z];"
          },
          {
            "answer_id": 5,
            "content": "for(int y=0, int z=0; z<x.length; z++) { y = x[z];"
          },
          {
            "answer_id": 6,
            "content": "int y = 0; for(int z=0; z<x.length; z++) { y = x[z];"
          }
        ]
      },
      {
        "content": "Given:\n```\nclass Emu {\n  static String s = \"-\";\n  public static void main(String[] args) {\n    try {\n      throw new Exception();\n    } catch (Exception e) {\n        try {\n          try { throw new Exception();\n          } catch (Exception ex) { s += \"ic \"; }\n          throw new Exception(); }\n        catch (Exception x) { s += \"mc \"; }\n        finally { s += \"mf \"; }\n    } finally { s += \"of \"; }\n    System.out.println(s);\n  }\n}\n```     \nWhat is the result?",
        "question_id": 6,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "-ic of"
          },
          {
            "answer_id": 2,
            "content": "-mf of"
          },
          {
            "answer_id": 3,
            "content": "-mc mf"
          },
          {
            "answer_id": 4,
            "content": "-ic mf of"
          },
          {
            "answer_id": 5,
            "content": "-ic mc mf of"
          },
          {
            "answer_id": 6,
            "content": "-ic mc of mf"
          },
          {
            "answer_id": 7,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "Given:\n```\n 3. class SubException extends Exception { }\n 4. class SubSubException extends SubException { }\n 5.\n 6. public class CC { void doStuff() throws SubException { } }\n 7.\n 8. class CC2 extends CC { void doStuff() throws SubSubException { } }\n 9.\n10. class CC3 extends CC { void doStuff() throws Exception { } }\n11.\n12. class CC4 extends CC { void doStuff(int x) throws Exception { } }\n13.\n14. class CC5 extends CC {  void doStuff()  { } }\n```\nWhat is the result? (Choose all that apply.)",
        "question_id": 7,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Compilation succeeds"
          },
          {
            "answer_id": 2,
            "content": "Compilation fails due to an error on line 8"
          },
          {
            "answer_id": 3,
            "content": "Compilation fails due to an error on line 10"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails due to an error on line 12"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails due to an error on line 14"
          }
        ]
      },
      {
        "content": "Given:\n```\n 3. public class Ebb {\n 4.   static int x = 7;\n 5.   public static void main(String[] args) {\n 6.     String s = \"\";\n 7.     for(int y = 0; y < 3; y++) {\n 8.       x++;\n 9.       switch(x) {\n10.         case 8: s += \"8 \";\n11.         case 9: s += \"9 \";\n12.         case 10: { s+= \"10 \"; break; }\n13.         default: s += \"d \";\n14.         case 13: s+= \"13 \";\n15.       }\n16.     }              \n17.     System.out.println(s);\n18.   }              \n19.   static { x++; }\n20. }\n``` \nWhat is the result?",
        "question_id": 8,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "9 10 d"
          },
          {
            "answer_id": 2,
            "content": "8 9 10 d"
          },
          {
            "answer_id": 3,
            "content": "9 10 10 d"
          },
          {
            "answer_id": 4,
            "content": "9 10 10 d 13"
          },
          {
            "answer_id": 5,
            "content": "8 9 10 10 d 13"
          },
          {
            "answer_id": 6,
            "content": "8 9 10 9 10 10 d 13"
          },
          {
            "answer_id": 7,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "Given:\n```\n3. class Infinity { }\n4. public class Beyond extends Infinity {\n5.   static Integer i;                       \n6.   public static void main(String[] args) {\n7.     int sw = (int)(Math.random() * 3);    \n8.     switch(sw) {                          \n9.       case 0: { for(int x = 10; x > 5; x++)                                                                   \n10.                   if(x > 10000000) x = 10;\n11.                break; }     \n12.      case 1: { int y = 7 * i;  break;  }                               \n13.      case 2: {  Infinity inf = new Beyond();              \n14.                 Beyond b = (Beyond)inf;  }             \n15.    }                               \n16.  }    \n17.} \n```\nAnd given that line 7 will assign the value \n0, 1, or 2 to sw, which are true?",
        "question_id": 9,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Compilation fails"
          },
          {
            "answer_id": 2,
            "content": "A ClassCastException might be thrown"
          },
          {
            "answer_id": 3,
            "content": "A StackOverflowError might be thrown"
          },
          {
            "answer_id": 4,
            "content": "A NullPointerException might be thrown"
          },
          {
            "answer_id": 5,
            "content": "An IllegalStateException might be thrown"
          },
          {
            "answer_id": 6,
            "content": "The program might hang without ever completing"
          },
          {
            "answer_id": 7,
            "content": "The program will always complete without exception"
          }
        ]
      },
      {
        "content": "Given:\n```\n 3. public class Circles {\n 4.   public static void main(String[] args) {\n 5.     int[] ia = {1,3,5,7,9};               \n 6.     for(int x : ia) {                     \n 7.       for(int j = 0; j < 3; j++) {        \n 8.         if(x > 4 && x < 8) continue;      \n 9.         System.out.print(\" \" + x);        \n10.         if(j == 1) break;                 \n11.         continue;                         \n12.       }                                   \n13.       continue;                           \n14.     }                                     \n15.   }                                       \n16. }\n```\nWhat is the result?",
        "question_id": 10,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "1 3 9"
          },
          {
            "answer_id": 2,
            "content": "5 5 7 7"
          },
          {
            "answer_id": 3,
            "content": "1 3 3 9 9"
          },
          {
            "answer_id": 4,
            "content": "1 1 3 3 9 9"
          },
          {
            "answer_id": 5,
            "content": "1 1 1 3 3 3 9 9 9"
          },
          {
            "answer_id": 6,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "Given:\n```\n 3. public class OverAndOver {\n 4.   static String s = \"\";\n 5.   public static void main(String[] args) {\n 6.     try {\n 7.       s += \"1\";\n 8.       throw new Exception();\n 9.     } catch (Exception e) { s += \"2\";\n10.     } finally { s += \"3\"; doStuff(); s += \"4\";\n11.     }\n12.     System.out.println(s);\n13.   }\n14.   static void doStuff() { int x = 0; int y = 7/x; }\n15. }\n```        \nWhat is the result?",
        "question_id": 11,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "12"
          },
          {
            "answer_id": 2,
            "content": "13"
          },
          {
            "answer_id": 3,
            "content": "123"
          },
          {
            "answer_id": 4,
            "content": "1234"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails"
          },
          {
            "answer_id": 6,
            "content": "123 followed by an exception"
          },
          {
            "answer_id": 7,
            "content": "1234 followed by an exception"
          },
          {
            "answer_id": 8,
            "content": "An exception is thrown with no other output"
          }
        ]
      },
      {
        "content": "Given:\n```\n 3. public class Wind {\n 4.   public static void main(String[] args) {\n 5.     foreach:                              \n 6.     for(int j=0; j<5; j++) {              \n 7.       for(int k=0; k< 3; k++) {           \n 8.         System.out.print(\" \" + j);        \n 9.         if(j==3 && k==1) break foreach;   \n10.         if(j==0 || j==2) break;           \n11.       }                                     \n12.     }                                       \n13.   }\n14. }\n```\nWhat is the result?",
        "question_id": 12,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "0 1 2 3"
          },
          {
            "answer_id": 2,
            "content": "1 1 1 3 3"
          },
          {
            "answer_id": 3,
            "content": "0 1 1 1 2 3 3"
          },
          {
            "answer_id": 4,
            "content": "1 1 1 3 3 4 4 4"
          },
          {
            "answer_id": 5,
            "content": "0 1 1 1 2 3 3 4 4 4"
          },
          {
            "answer_id": 6,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "Given:\n```\n3. public class Gotcha {\n4.   public static void main(String[] args) {\n5.     // insert code here\n6.   \n7.   }\n8.   void go() {\n9.     go();\n10.  }\n11.}\n```\nAnd given the following three code fragments:    \n```\nI.   new Gotcha().go();\nII.  try { new Gotcha().go(); }\n     catch (Error e) { System.out.println(\"ouch\"); }\nIII. try { new Gotcha().go(); }\n     catch (Exception e) { System.out.println(\"ouch\"); }\n```\nWhen fragments I–III are added, independently, \nat line 5, which are true?\n(Choose all that apply.)",
        "question_id": 13,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Some will not compile"
          },
          {
            "answer_id": 2,
            "content": "They will all compile"
          },
          {
            "answer_id": 3,
            "content": "All will complete normally"
          },
          {
            "answer_id": 4,
            "content": "None will complete normally"
          },
          {
            "answer_id": 5,
            "content": "Only one will complete normally"
          },
          {
            "answer_id": 6,
            "content": "Two of them will complete normally"
          }
        ]
      },
      {
        "content": "Given the code snippet:\n```\nString s = \"bob\";\nString[] sa = {\"a\", \"bob\"};\nfinal String s2 = \"bob\";\nStringBuilder sb = new StringBuilder(\"bob\");\n// switch(sa[1]) {          // line 1\n// switch(\"b\" + \"ob\") {     // line 2\n// switch(sb.toString()) {  // line 3\n\n// case \"ann\":  ;           // line 4\n// case s:      ;           // line 5\n// case s2:     ;           // line 6\n}\n```\nAnd given that the numbered lines will all be \ntested by un-commenting one switch statement \nand one case statement together, which line(s) \nwill FAIL to compile? (Choose all that apply.)",
        "question_id": 14,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "line 1"
          },
          {
            "answer_id": 2,
            "content": "line 2"
          },
          {
            "answer_id": 3,
            "content": "line 3"
          },
          {
            "answer_id": 4,
            "content": "line 4"
          },
          {
            "answer_id": 5,
            "content": "line 5"
          },
          {
            "answer_id": 6,
            "content": "line6"
          },
          {
            "answer_id": 7,
            "content": "All six lines of code will compile"
          }
        ]
      },
      {
        "content": "Given:\n```\n1. public class Frisbee {\n2.   // insert code here        \n3.     int x = 0;               \n4.     System.out.println(7/x); \n5.   }\n6. }\n```\nAnd given the following four code fragments:\n```\nI.   public static void main(String[] args) {\nII.  public static void main(String[] args) throws Exception {\nIII. public static void main(String[] args) throws IOException {\nIV.  public static void main(String[] args) throws RuntimeException {\n```\nIf the four fragments are inserted independently \nat line 2, which are true? (Choose all that apply.)",
        "question_id": 15,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "All four will compile and execute without exception"
          },
          {
            "answer_id": 2,
            "content": "All four will compile and execute and throw an exception"
          },
          {
            "answer_id": 3,
            "content": "Some, but not all, will compile and execute without exception\n"
          },
          {
            "answer_id": 4,
            "content": "Some, but not all, will compile and execute and throw an exception\n"
          },
          {
            "answer_id": 5,
            "content": "When considering fragments II, III, and IV, of those that will compile, adding a try/catch\nblock around line 4 will cause compilation to fail"
          }
        ]
      },
      {
        "content": "Given:\n```\n2. class MyException extends Exception { }\n3. class Tire {\n4.   void doStuff() {  }\n5. }\n6. public class Retread extends Tire {\n7.   public static void main(String[] args) {\n8.     new Retread().doStuff();\n9.   }\n10.  // insert code here \n11.     System.out.println(7/0);\n12.   }\n13. }\n```\nAnd given the following four code fragments:\n```\nI.   void doStuff() {\nII.  void doStuff() throws MyException {\nIII. void doStuff() throws RuntimeException {\nIV.  void doStuff() throws ArithmeticException {  \n```\nWhen fragments I–IV are added, independently, \nat line 10, which are true? (Choose all that apply.)",
        "question_id": 16,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "None will compile"
          },
          {
            "answer_id": 2,
            "content": "They will all compile"
          },
          {
            "answer_id": 3,
            "content": "Some, but not all, will compile"
          },
          {
            "answer_id": 4,
            "content": "All of those that compile will throw an exception at runtime"
          },
          {
            "answer_id": 5,
            "content": "None of those that compile will throw an exception at runtime"
          },
          {
            "answer_id": 6,
            "content": "Only some of those that compile will throw an exception at runtime"
          }
        ]
      }
    ]
  },
  {
    "exam_id": 2,
    "theme_id": 7,
    "theme_content": "Assertions and Java 7 Exceptions",
    "questions": [
      {
        "content": "Given two files:\n```\n1. class One {\n2.   public static void main(String[] args) {\n3.     int assert = 0;\n4.   } \n5. }\n\n1. class Two {\n2.   public static void main(String[] args) {\n3.     assert(false);\n4.   } \n5. }\n```\nAnd the four command-line invocations:\n```\njavac -source 1.3 One.java\njavac -source 1.4 One.java\njavac -source 1.3 Two.java\njavac -source 1.4 Two.java\n```   \nWhat is the result? (Choose all that apply.)",
        "question_id": 1,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Only one compilation will succeed"
          },
          {
            "answer_id": 2,
            "content": "Exactly two compilations will succeed"
          },
          {
            "answer_id": 3,
            "content": "Exactly three compilations will succeed"
          },
          {
            "answer_id": 4,
            "content": "All four compilations will succeed"
          },
          {
            "answer_id": 5,
            "content": "No compiler warnings will be produced"
          },
          {
            "answer_id": 6,
            "content": "At least one compiler warning will be produced"
          }
        ]
      },
      {
        "content": "Which are true? (Choose all that apply.)",
        "question_id": 2,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "It is appropriate to use assertions to validate arguments to methods marked public"
          },
          {
            "answer_id": 2,
            "content": "It is appropriate to catch and handle assertion errors"
          },
          {
            "answer_id": 3,
            "content": "It is NOT appropriate to use assertions to validate command-line arguments"
          },
          {
            "answer_id": 4,
            "content": "It is appropriate to use assertions to generate alerts when you\n reach code that should not be reachable"
          },
          {
            "answer_id": 5,
            "content": "It is NOT appropriate for assertions to change a program's state"
          }
        ]
      },
      {
        "content": "Given:\n```\n 3. public class Clumsy {\n 4.   public static void main(String[] args) {\n 5.     int j = 7;\n 6.     assert(++j > 7);\n 7.     assert(++j > 8): \"hi\";\n 8.     assert(j > 10): j=12;\n 9.     assert(j==12): doStuff();\n10.     assert(j==12): new Clumsy();\n11. }\n12.   static void doStuff() { }\n13. }\n```    \nWhich are true? (Choose all that apply.)",
        "question_id": 3,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Compilation succeeds"
          },
          {
            "answer_id": 2,
            "content": "Compilation fails due to an error on line 6"
          },
          {
            "answer_id": 3,
            "content": "Compilation fails due to an error on line 7"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails due to an error on line 8"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails due to an error on line 9"
          },
          {
            "answer_id": 6,
            "content": "Compilation fails due to an error on line 10"
          }
        ]
      },
      {
        "content": "Given:\n```\nclass AllGoesWrong {\n  public static void main(String[] args) {\n    AllGoesWrong a = new AllGoesWrong();\n    try {\n      a.blowUp();\n      System.out.println(\"a\");\n    } catch (IOException e | SQLException e) {\n      System.out.println(\"c\");\n    } finally {\n      System.out.println(\"d\");\n    }\n  }\n  void blowUp() throws IOException, SQLException {\n    throw new SQLException();\n  }\n}\n```\nWhat is the result? ",
        "question_id": 4,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "ad"
          },
          {
            "answer_id": 2,
            "content": "acd"
          },
          {
            "answer_id": 3,
            "content": "cd"
          },
          {
            "answer_id": 4,
            "content": "d"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails"
          },
          {
            "answer_id": 6,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "Given:\n```\nclass BadIO {\n  public static void main(String[] args) {\n    BadIO a = new BadIO();\n    try {\n      a.fileBlowUp();\n      a.databaseBlowUp();\n      System.out.println(\"a\");\n    } // insert code here\n      System.out.println(\"b\");\n    } catch (Exception e) {\n      System.out.println(\"c\");\n    }\n  }\n  void databaseBlowUp() throws SQLException {\n    throw new SQLException();\n  }\n  void fileBlowUp() throws IOException {\n    throw new IOException();\n  }\n}\n```\nWhich inserted independently at ```//insert code here``` \nwill compile and produce the output:b?\n(Choose all that apply.) ",
        "question_id": 5,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```catch(Exception e) {```"
          },
          {
            "answer_id": 2,
            "content": "```catch(FileNotFoundException e) {```"
          },
          {
            "answer_id": 3,
            "content": "```catch(IOException e) {```"
          },
          {
            "answer_id": 4,
            "content": "```catch(IOException | SQLException e) {```"
          },
          {
            "answer_id": 5,
            "content": "```catch(IOException e | SQLException e) {```"
          },
          {
            "answer_id": 6,
            "content": "```catch(SQLException e) {```"
          },
          {
            "answer_id": 7,
            "content": "```catch(SQLException | IOException e) {```"
          },
          {
            "answer_id": 8,
            "content": "```catch(SQLException e | IOException e) {```"
          }
        ]
      },
      {
        "content": "Given:\n```\nclass Train {\n  class RanOutOfTrack extends Exception { }\n  class AnotherTrainComing extends Exception { }\n  public static void main(String[] args) throws RanOutOfTrack, AnotherTrainComing {\n    Train a = new Train();\n    try {\n      a.drive();\n      System.out.println(\"honk! honk!\");\n    } // insert code here\n      System.out.println(\"error driving\");\n      throw e; \n      }\n    }\n  void drive() throws RanOutOfTrack, AnotherTrainComing {\n      throw new RanOutOfTrack(); \n  }\n}\n```\nWhich inserted independently at ```//insert code here``` \nwill compile and produce the output\n```error driving``` before throwing an exception?\n(Choose all that apply.)   ",
        "question_id": 6,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "catch(AnotherTrainComing e) {"
          },
          {
            "answer_id": 2,
            "content": "catch(AnotherTrainComing | RanOutOfTrack e) {"
          },
          {
            "answer_id": 3,
            "content": "catch(AnotherTrainComing e | RanOutOfTrack e) {"
          },
          {
            "answer_id": 4,
            "content": "catch(Exception e) {"
          },
          {
            "answer_id": 5,
            "content": "catch(IllegalArgumentException e) {"
          },
          {
            "answer_id": 6,
            "content": "catch(RanOutOfTrack e) {"
          },
          {
            "answer_id": 7,
            "content": "None of the above—code fails to compile for another reason"
          }
        ]
      },
      {
        "content": "Given:\n```\nclass Conductor {\n  static String s = \"-\";\n  class Whistle implements AutoCloseable {\n    public void toot() {     s += \"t\";   }\n    public void close() {    s += \"c\";   }\n  }\n  public static void main(String[] args) {\n    new Conductor().run();\n    System.out.println(s);\n  }  \n  public void run() {\n    try (Whistle w = new Whistle()) {\n       w.toot();\n       s += \"1\";\n       throw new Exception();\n    } catch (Exception e) { s += \"2\";\n    } finally { s += \"3\"; } \n  } \n}\n```\nWhat is the result?",
        "question_id": 7,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "-t123t"
          },
          {
            "answer_id": 2,
            "content": "-t12c3"
          },
          {
            "answer_id": 3,
            "content": "-t123"
          },
          {
            "answer_id": 4,
            "content": "-t1c3"
          },
          {
            "answer_id": 5,
            "content": "-t1c23"
          },
          {
            "answer_id": 6,
            "content": "None of the above; main() throws an exception"
          },
          {
            "answer_id": 7,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "Given:\n```\npublic class MultipleResources {\n  class Lamb implements AutoCloseable {\n    public void close() throws Exception {\n      System.out.print(\"l\");\n    }\n  }\n  class Goat implements AutoCloseable {\n     public void close() throws Exception {\n        System.out.print(\"g\");\n     }\n  }\n  public static void main(String[] args) throws Exception {\n    new MultipleResources().run();\n  }\n  public void run() throws Exception {\n    try (Lamb l = new Lamb();\n         System.out.print(\"t\");\n         Goat g = new Goat();) {\n      System.out.print(\"2\");\n    } finally {\n      System.out.print(\"f\");\n    }\n  } \n}\n```\nWhat is the result?   ",
        "question_id": 8,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "2glf"
          },
          {
            "answer_id": 2,
            "content": "2lgf"
          },
          {
            "answer_id": 3,
            "content": "tglf"
          },
          {
            "answer_id": 4,
            "content": "t2lgf"
          },
          {
            "answer_id": 5,
            "content": "t2lgf"
          },
          {
            "answer_id": 6,
            "content": "None of the above; main() throws an exception"
          },
          {
            "answer_id": 7,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "Given:\n```\n1: public class Animals {\n2:   class Lamb {\n3:   public void close() throws Exception { }\n4:   }\n5:   public static void main(String[] args) throws Exception {\n6:      new Animals().run();  \n7:   } \n8:\n9:   public void run() throws Exception {\n10:   try (Lamb l = new Lamb();) {       \n11:   }                                  \n12:  }                                   \n13: }\n```       \nAnd the following possible changes:    \nC1. Replace line 2 with ```class Lamb implements AutoCloseable {```\nC2. Replace line 2 with ```class Lamb implements Closeable {```\nC3. Replace line 11 with ```} finally {}```\nWhat change(s) allow the code to compile? \n(Choose all that apply.)",
        "question_id": 9,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Just C1 is sufficient"
          },
          {
            "answer_id": 2,
            "content": "Just C2 is sufficient"
          },
          {
            "answer_id": 3,
            "content": "Just C3 is sufficient"
          },
          {
            "answer_id": 4,
            "content": "Both C1 and C3"
          },
          {
            "answer_id": 5,
            "content": "Both C2 and C3"
          },
          {
            "answer_id": 6,
            "content": "The code compiles without any changes"
          }
        ]
      },
      {
        "content": "Given:\n```\npublic class Animals {\n  class Lamb implements Closeable {\n    public void close() {\n      throw new RuntimeException(\"a\");\n    }\n  }\n  public static void main(String[] args) {\n    new Animals().run();\n  }\n  public void run()  {\n    try (Lamb l = new Lamb();) {\n      throw new IOException();\n    } catch(Exception e) {\n      throw new RuntimeException(\"c\"); \n    }\n  } \n}\n```    \nWhich exceptions will the code throw?",
        "question_id": 10,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```IOException``` with suppressed ```RuntimeException a```"
          },
          {
            "answer_id": 2,
            "content": "```IOException``` with suppressed ```RuntimeException c```"
          },
          {
            "answer_id": 3,
            "content": "``RuntimeException a``` with no suppressed exception"
          },
          {
            "answer_id": 4,
            "content": "```RuntimeException c``` with no suppressed exception"
          },
          {
            "answer_id": 5,
            "content": "```RuntimeException a``` with suppressed ```RuntimeException c```"
          },
          {
            "answer_id": 6,
            "content": "```RuntimeException c``` with suppressed ```RuntimeException a```"
          },
          {
            "answer_id": 7,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "Given:\n```\npublic class Animals {\n  class Lamb implements AutoCloseable {\n    public void close() {\n      throw new RuntimeException(\"a\");\n    }\n  }\n  public static void main(String[] args) throws IOException {\n    new Animals().run();\n  }\n  public void run() throws IOException {\n    try (Lamb l = new Lamb();) {\n      throw new IOException();\n    } catch(Exception e) {\n      throw e; \n    }\n  } \n}\n```\nWhich exceptions will the code throw? ",
        "question_id": 11,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```IOException``` with suppressed ```RuntimeException a```"
          },
          {
            "answer_id": 2,
            "content": "```IOException``` with suppressed ```RuntimeException c```"
          },
          {
            "answer_id": 3,
            "content": "```RuntimeException a``` with no suppressed exception"
          },
          {
            "answer_id": 4,
            "content": "```RuntimeException c``` with no suppressed exception"
          },
          {
            "answer_id": 5,
            "content": "```RuntimeException a``` with suppressed ```RuntimeException c```"
          },
          {
            "answer_id": 6,
            "content": "```RuntimeException c``` with suppressed ```RuntimeException a```"
          },
          {
            "answer_id": 7,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "Given:\n```\npublic class Concert {\n  static class PowerOutage extends Exception {}\n  static class Thunderstorm extends Exception {}\n  public static void main(String[] args) {\n    try {\n    new Concert().listen();\n    System.out.println(\"a\");\n    } catch(PowerOutage | Thunderstorm e) {\n      e = new PowerOutage();\n      System.out.println(\"b\");\n    } finally { System.out.println(\"c\"); }\n  }\n  public void listen() throws PowerOutage, Thunderstorm{ }\n}\n```\nWhat will this code print?",
        "question_id": 12,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "a"
          },
          {
            "answer_id": 2,
            "content": "ab"
          },
          {
            "answer_id": 3,
            "content": "ac"
          },
          {
            "answer_id": 4,
            "content": "abc"
          },
          {
            "answer_id": 5,
            "content": "bc"
          },
          {
            "answer_id": 6,
            "content": "Compilation fails"
          }
        ]
      }
    ]
  },
  {
    "exam_id": 2,
    "theme_id": 8,
    "theme_content": "String, Data Formatting, Resource",
    "questions": [
      {
        "content": "Given:\n```\nimport java.util.regex.*;\nclass Regex2 {\n  public static void main(String[] args) {\n    Pattern p = Pattern.compile(args[0]);\n    Matcher m = p.matcher(args[1]);\n    boolean b = false;\n    while(b = m.find()) {\n      System.out.print(m.start() + m.group());\n    } \n  }\n}\n```\nAnd the command line:\n```\njava Regex2 \"\\d*\" ab34ef\n```\nWhat is the result?",
        "question_id": 1,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "234"
          },
          {
            "answer_id": 2,
            "content": "334"
          },
          {
            "answer_id": 3,
            "content": "2334"
          },
          {
            "answer_id": 4,
            "content": "0123456"
          },
          {
            "answer_id": 5,
            "content": "01234456"
          },
          {
            "answer_id": 6,
            "content": "12334567"
          },
          {
            "answer_id": 7,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "Given:\n```\npublic class Canada {\n  public static void main(String[] args) {\n    ResourceBundle rb = ResourceBundle.getBundle(\"Flag\",\n      new Locale(\"en_CA\"));\n    System.out.println(rb.getString(\"key\"));\n  }\n}\n```\nAssume the default Locale is Italian. If each of the \nfollowing is the only resource bundle on the \nclasspath and contains key=value, which will be \nused? (Choose all that apply.)",
        "question_id": 2,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Flag.java"
          },
          {
            "answer_id": 2,
            "content": "Flag_CA.properties"
          },
          {
            "answer_id": 3,
            "content": "Flag_en.java"
          },
          {
            "answer_id": 4,
            "content": "Flag_en.properties"
          },
          {
            "answer_id": 5,
            "content": "Flag_en_CA.properties"
          },
          {
            "answer_id": 6,
            "content": "Flag_fr_CA.properties"
          }
        ]
      },
      {
        "content": "Given:\n```\nimport java.util.regex.*;\nclass Quetico {\n  public static void main(String [] args) {\n    Pattern p = Pattern.compile(args[0]);\n    Matcher m = p.matcher(args[1]);\n    System.out.print(\"match positions: \");\n    while(m.find()) {\n      System.out.print(m.start() + \" \");\n    }\n    System.out.println(\"\");\n  }\n}\n```     \nWhich invocation(s) will produce the output: \n0 2 4 8 ? (Choose all that apply.)",
        "question_id": 3,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```java Quetico \"\\b\" \"^23 *$76 bc\"```"
          },
          {
            "answer_id": 2,
            "content": "```java Quetico \"\\B\" \"^23 *$76 bc\"```"
          },
          {
            "answer_id": 3,
            "content": "```java Quetico \"\\S\" \"^23 *$76 bc\"```"
          },
          {
            "answer_id": 4,
            "content": "```java Quetico \"\\W\" \"^23 *$76 bc\"```"
          },
          {
            "answer_id": 5,
            "content": "None of the above"
          },
          {
            "answer_id": 6,
            "content": "Compilation fails"
          },
          {
            "answer_id": 7,
            "content": "An exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "Given:\n```\npublic class Banana {\n  public static void main(String[] args) {\n    String in = \"1 a2 b 3 c4d 5e\";\n    String[] chunks = in.split(args[0]);\n    System.out.println(\"count \" + chunks.length);\n    for(String s : chunks)\n      System.out.print(\">\" + s + \"<  \");\n  }\n}\n```  \nAnd two invocations:\n```\njava Banana \" \" \njava Banana \"\\d\"\n```     \nWhat is the result? (Choose all that apply.)",
        "question_id": 4,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "In both cases, the count will be 5"
          },
          {
            "answer_id": 2,
            "content": "In both cases, the count will be 6"
          },
          {
            "answer_id": 3,
            "content": "In one case, the count will be 5, and in the other case, 6"
          },
          {
            "answer_id": 4,
            "content": "Banana cannot be invoked because it will not compile"
          },
          {
            "answer_id": 5,
            "content": "At least one of the invocations will throw an exception"
          }
        ]
      },
      {
        "content": "Given three resource bundles and a Java class:\n```\nTrain_en_US.properties: train=subway\nTrain_en_UK.properties: train=underground\nTrain_en.properties: ride = ride\n\n1: public class ChooChoo {\n2:   public static void main(String[] args) {                \n3:     Locale.setDefault(new Locale(\"en\", \"US\"));            \n4:     ResourceBundle rb = ResourceBundle.getBundle(\"Train\", \n5:       new Locale(\"en\", \"US\"));                            \n6:     System.out.print(rb.getString(\"ride\")                 \n         + \" \" + rb.getString(\"train\"));                     \n7    } \n8: }\n```      \nWhich of the following, when made independently, \nwill change the output to \"ride underground\"? \n(Choose all that apply.)",
        "question_id": 5,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Add ```train=underground``` to ```Train_en.properties```"
          },
          {
            "answer_id": 2,
            "content": "Change line 1 to ```Locale.setDefault(new Locale(\"en\", \"UK\"));```"
          },
          {
            "answer_id": 3,
            "content": "Change line 5 ```to Locale.ENGLISH);```"
          },
          {
            "answer_id": 4,
            "content": "Change line 5 to ```new Locale(\"en\", \"UK\"));```"
          },
          {
            "answer_id": 5,
            "content": "Delete file ```Train_en_US.properties```"
          }
        ]
      },
      {
        "content": "Given:\n```\npublic class Legos {\n  public static void main(String[] args) {\n    StringBuilder sb = new StringBuilder(8);\n    System.out.print(sb.length() + \" \" + sb + \" \");\n    sb.insert(0, \"abcdef\");\n    sb.append(\"789\");\n    System.out.println(sb.length() + \" \" + sb);\n  } \n}\n```\nWhat is the result?",
        "question_id": 6,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```0 8 abcdef78```"
          },
          {
            "answer_id": 2,
            "content": "```0 8 789abcde```"
          },
          {
            "answer_id": 3,
            "content": "```0 9 abcdef789```"
          },
          {
            "answer_id": 4,
            "content": "```0 9 789abcdef```"
          },
          {
            "answer_id": 5,
            "content": "Compilations fails"
          },
          {
            "answer_id": 6,
            "content": "0, followed by an exception"
          }
        ]
      },
      {
        "content": "Given two files:\n```\npackage rb;\npublic class Bundle extends java.util.ListResourceBundle {\n  protected Object[][] getContents() {\n    return new Object[][] { { \"123\", 456 } };\n  } \n}\n\npackage rb;\nimport java.util.*;\npublic class KeyValue {\n  public static void main(String[] args) {\n    ResourceBundle rb = ResourceBundle.getBundle(\"rb.Bundle\",\n      Locale.getDefault());\n    // insert code here\n  } \n}\n```\nWhich, inserted independently, will compile? \n(Choose all that apply.) ",
        "question_id": 7,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Object obj = rb.getInteger(\"123\");"
          },
          {
            "answer_id": 2,
            "content": "Object obj = rb.getInteger(123);"
          },
          {
            "answer_id": 3,
            "content": "Object obj = rb.getObject(\"123\");"
          },
          {
            "answer_id": 4,
            "content": "Object obj = rb.getObject(123);"
          },
          {
            "answer_id": 5,
            "content": "Object obj = rb.getString(\"123\");"
          },
          {
            "answer_id": 6,
            "content": "Object obj = rb.getString(123);"
          }
        ]
      },
      {
        "content": "Given:\n```\n3. public class Theory {\n4.   public static void main(String[] args) {\n5.     String s1 = \"abc\";\n6.     String s2 = s1;\n7.     s1 += \"d\";\n8.     System.out.println(s1 + \" \" + s2 + \" \" + (s1==s2));\n9.\n10.    StringBuffer sb1 = new StringBuffer(\"abc\");\n11.    StringBuffer sb2 = sb1;\n12.    sb1.append(\"d\");\n13.    System.out.println(sb1 + \" \" + sb2 + \" \" + (sb1==sb2));\n14.  }\n15.}\n```    \nWhich are true? (Choose all that apply.) ",
        "question_id": 8,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Compilation fails"
          },
          {
            "answer_id": 2,
            "content": "The first line of output is ```abc abc true```"
          },
          {
            "answer_id": 3,
            "content": "The first line of output is ```abc abc false```"
          },
          {
            "answer_id": 4,
            "content": "The first line of output is ```abcd abc false```"
          },
          {
            "answer_id": 5,
            "content": "The second line of output is ```abcd abc false```"
          },
          {
            "answer_id": 6,
            "content": "The second line of output is ```abcd abcd true```"
          },
          {
            "answer_id": 7,
            "content": "The second line of output is ```abcd abcd false```"
          }
        ]
      },
      {
        "content": "Given:\n```\npublic class Stone {\n  public static void main(String[] args) {\n    String s = \"abc\";\n    System.out.println(\">\" + doStuff(s) + \"<\");\n  }\n  static String doStuff(String s) {\n    s = s.concat(\" ef h \");\n    return s.trim();\n  } \n}\n``` \nWhat is the result?  ",
        "question_id": 9,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```>abcefh<```"
          },
          {
            "answer_id": 2,
            "content": "```>efhabc<```"
          },
          {
            "answer_id": 3,
            "content": "```>abc ef h<```"
          },
          {
            "answer_id": 4,
            "content": "```\\>>ef h abc<```"
          },
          {
            "answer_id": 5,
            "content": "```>abc ef h <```"
          }
        ]
      },
      {
        "content": "Given:\n```\n 3. import java.text.*;\n 4. public class Slice {\n 5.   public static void main(String[] args) {\n 6.     String s = \"987.123456\";\n 7.     double d  = 987.123456d;\n 8.     NumberFormat nf = NumberFormat.getInstance();\n 9.     nf.setMaximumFractionDigits(5);\n10.     System.out.println(nf.format(d) + \" \");\n11.     try {\n12.       System.out.println(nf.parse(s));\n13.     } catch (Exception e) { System.out.println(\"got exc\"); }\n14.   }\n15. }\n```     \nWhich are true? (Choose all that apply.) ",
        "question_id": 10,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "The output is ```987.12345 987.12345```"
          },
          {
            "answer_id": 2,
            "content": "The output is ```987.12346 987.12345```"
          },
          {
            "answer_id": 3,
            "content": "The output is ```987.12345 987.123456```"
          },
          {
            "answer_id": 4,
            "content": "The output is ```987.12346 987.123456```"
          },
          {
            "answer_id": 5,
            "content": "The try/catch block is unnecessary"
          },
          {
            "answer_id": 6,
            "content": "The code compiles and runs without exception"
          },
          {
            "answer_id": 7,
            "content": "The invocation of parse() must be placed within a try/catch block"
          }
        ]
      },
      {
        "content": "Given:\n```\n3. import java.util.regex.*;\n4. public class Archie {\n5.   public static void main(String[] args) {\n6.     Pattern p = Pattern.compile(args[0]);\n7.     Matcher m = p.matcher(args[1]);\n8.     int count = 0;\n9.     while(m.find())\n10. count++;\n11.     System.out.print(count);\n12. }\n13. }\n```     \nAnd given the command-line invocation:\n```\njava Archie \"\\d+\" ab2c4d67\n```       \nWhat is the result?",
        "question_id": 11,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "0"
          },
          {
            "answer_id": 2,
            "content": "3"
          },
          {
            "answer_id": 3,
            "content": "4"
          },
          {
            "answer_id": 4,
            "content": "8"
          },
          {
            "answer_id": 5,
            "content": "9"
          },
          {
            "answer_id": 6,
            "content": "Compilation fails"
          }
        ]
      },
      {
        "content": "Given:\n```\n3. import java.util.*;\n4. public class Looking {\n5.   public static void main(String[] args) {\n6.     String input = \"1 2 a 3 45 6\";\n7.     Scanner sc = new Scanner(input);\n8.     int x = 0;\n9.     do {\n10.      x = sc.nextInt();\n11.      System.out.print(x + \" \");  \n12.    } while (x!=0);\n13.  }\n14.}       \n```        \nWhat is the result?",
        "question_id": 12,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "1 2"
          },
          {
            "answer_id": 2,
            "content": "1 2 3 45 6"
          },
          {
            "answer_id": 3,
            "content": "1 2 3 4 5 6"
          },
          {
            "answer_id": 4,
            "content": "1 2 a 3 45 6"
          },
          {
            "answer_id": 5,
            "content": "Compilation fails"
          },
          {
            "answer_id": 6,
            "content": "1 2 followed by an exception"
          }
        ]
      }
    ]
  },
  {
    "exam_id": 2,
    "theme_id": 9,
    "theme_content": "I/O and NIO",
    "questions": [
      {
        "content": "Given:\n```\nimport java.io.*;\nclass Directories {\n  static String [] dirs = {\"dir1\", \"dir2\"};\n  public static void main(String [] args) {\n    for (String d : dirs) {\n      // insert code 1 here\n      File file = new File(path, args[0]);\n      // insert code 2 here\n    }\n  } \n}\n```\nand that the invocation\n```\njava Directories file2.txt \n```     \nis issued from a directory that has two subdirectories, \n\"dir1\" and \"dir2,\" and that \"dir1\" has a file \"file1.txt\" \nand \"dir2\" has a file \"file2.txt,\" and the output is \n\"false true,\" which set(s) of code fragments must be \ninserted? (Choose all that apply.)",
        "question_id": 1,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```String path = d;```\n```System.out.print(file.exists() + \" \");```"
          },
          {
            "answer_id": 2,
            "content": "```String path = d;``` \n```System.out.print(file.isFile() + \" \");```"
          },
          {
            "answer_id": 3,
            "content": "```String path = File.separator + d;``` \n```System.out.print(file.exists() + \" \");```"
          },
          {
            "answer_id": 4,
            "content": "```String path = File.separator + d;``` \n```System.out.print(file.isFile() + \" \");```"
          }
        ]
      },
      {
        "content": "Given:\n```\n3. import java.io.*;\n4. public class ReadingFor {\n5.  public static void main(String[] args) {\n6.    String s;                                       \n7.    try {                                           \n8.      FileReader fr = new FileReader(\"myfile.txt\"); \n9.      BufferedReader br = new BufferedReader(fr);   \n10.     while((s = br.readLine()) != null)            \n11.       System.out.println(s);\n12.     br.flush();\n13.   } catch (IOException e) { System.out.println(\"io error\"); }\n16.  }\n17. }\n```\nAnd given that ```myfile.txt``` contains the \nfollowing two lines of data:        \n```\nab\ncd\n```\nWhat is the result?",
        "question_id": 2,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```ab```"
          },
          {
            "answer_id": 2,
            "content": "```abcd```"
          },
          {
            "answer_id": 3,
            "content": "```ab```\n```cd```"
          },
          {
            "answer_id": 4,
            "content": "```a```\n ```b```\n ```c```\n ```d```"
          }
        ]
      },
      {
        "content": "Given:\n```\n3. import java.io.*;\n4. public class Talker {\n5.   public static void main(String[] args) {\n6.      Console c = System.console();                                               \n7.      String u = c.readLine(\"%s\", \"username: \"); \n8.      System.out.println(\"hello \" + u);               \n9.      String pw;                                                                  \n10.     if(c != null && (pw = c.readPassword(\"%s\", \"password: \")) != null)          \n11.     // check for valid password                                       \n12.   }\n13. }\n```\nIf line 6 creates a valid Console object and if the \nuser enters fred as a username and 1234 as a password, \nwhat is the result? (Choose all that apply.)",
        "question_id": 3,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```username:```\n```password:```"
          },
          {
            "answer_id": 2,
            "content": "```username: fred```\n```password:```"
          },
          {
            "answer_id": 3,
            "content": "```username: fred```\n```password: 1234```"
          },
          {
            "answer_id": 4,
            "content": "Compilation fails"
          },
          {
            "answer_id": 5,
            "content": "An Exception is thrown at runtime"
          }
        ]
      },
      {
        "content": "Given:\n```\n 3. import java.io.*;\n 4. class Vehicle { }\n 5. class Wheels { }\n 6. class Car extends Vehicle implements Serializable {  }\n 7. class Ford extends Car { }\n 8. class Dodge extends Car {\n 9.  Wheels w = new Wheels();\n10. }\n```     \nInstances of which class(es) can be serialized? \n(Choose all that apply.)",
        "question_id": 4,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Car"
          },
          {
            "answer_id": 2,
            "content": "Ford"
          },
          {
            "answer_id": 3,
            "content": "Dodge"
          },
          {
            "answer_id": 4,
            "content": "Wheels"
          },
          {
            "answer_id": 5,
            "content": "Vehicle"
          }
        ]
      },
      {
        "content": "Which of the following creates a Path object pointing\n to ```c:/temp/exam```? (Choose all that apply.)",
        "question_id": 5,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```new Path(\"c:/temp/exam\")```"
          },
          {
            "answer_id": 2,
            "content": "```new Path(\"c:/temp\", \"exam\")```"
          },
          {
            "answer_id": 3,
            "content": "```Files.get(\"c:/temp/exam\")```"
          },
          {
            "answer_id": 4,
            "content": "```Files.get(\"c:/temp\", \"exam\")```"
          },
          {
            "answer_id": 5,
            "content": "```Paths.get(\"c:/temp/exam\")```"
          },
          {
            "answer_id": 6,
            "content": "```Paths.get(\"c:/temp\", \"exam\")```"
          }
        ]
      },
      {
        "content": "Given a directory tree at the root of the C: \ndrive and the fact that no other files exist:\n```\ndir x - |\n..........| - dir y\n..........| - file a\n```      \nand these two paths:\n```\nPath one = Paths.get(\"c:/x\");\nPath two = Paths.get(\"c:/x/y/a\");\n```\nWhich of the following statements prints out: \ny/a ?      ",
        "question_id": 6,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```System.out.println(one.relativize(two));```"
          },
          {
            "answer_id": 2,
            "content": "```System.out.println(two.relativize(one));```"
          },
          {
            "answer_id": 3,
            "content": "```System.out.println(one.resolve(two));```"
          },
          {
            "answer_id": 4,
            "content": "```System.out.println(two.resolve(one));```"
          },
          {
            "answer_id": 5,
            "content": "```System.out.println(two.resolve(two));```"
          },
          {
            "answer_id": 6,
            "content": "None of the above"
          }
        ]
      },
      {
        "content": "Given the following statements:\nI. A nonempty directory can usually be deleted using\n Files.delete\nII. A nonempty directory can usually be moved using\n Files.move\nIII. A nonempty directory can usually be copied using \n Files.copy\nWhich of the following is true?",
        "question_id": 7,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "I only"
          },
          {
            "answer_id": 2,
            "content": "II only"
          },
          {
            "answer_id": 3,
            "content": "III only"
          },
          {
            "answer_id": 4,
            "content": "I and II only"
          },
          {
            "answer_id": 5,
            "content": "II and III only"
          },
          {
            "answer_id": 6,
            "content": "I and III only"
          },
          {
            "answer_id": 7,
            "content": "I, II, and III"
          }
        ]
      },
      {
        "content": "Given:\n```\nnew File(\"c:/temp/test.txt\").delete();\n```\nHow would you write this line of code using \nJava 7 APIs?",
        "question_id": 8,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "Files.delete(Paths.get(\"c:/temp/test.txt\"));"
          },
          {
            "answer_id": 2,
            "content": "Files.deleteIfExists(Paths.get(\"c:/temp/test.txt\"));"
          },
          {
            "answer_id": 3,
            "content": "Files.deleteOnExit(Paths.get(\"c:/temp/test.txt\"));"
          },
          {
            "answer_id": 4,
            "content": "Paths.get(\"c:/temp/test.txt\").delete();"
          },
          {
            "answer_id": 5,
            "content": "Paths.get(\"c:/temp/test.txt\").deleteIfExists();"
          },
          {
            "answer_id": 6,
            "content": "Paths.get(\"c:/temp/test.txt\").deleteOnExit();"
          }
        ]
      },
      {
        "content": "Given:\n```\npublic void read(Path dir) throws IOException {\n  // CODE HERE\n  System.out.println(attr.creationTime());\n}\n```\nWhich code inserted at // CODE HERE will compile \nand run without error on Windows? \n(Choose all that apply.)",
        "question_id": 9,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```BasicFileAttributes attr = Files.readAttributes(dir, BasicFileAttributes.class);```"
          },
          {
            "answer_id": 2,
            "content": "```BasicFileAttributes attr = Files.readAttributes(dir, DosFileAttributes.class);```"
          },
          {
            "answer_id": 3,
            "content": "```DosFileAttributes attr = Files.readAttributes(dir, BasicFileAttributes.class);```"
          },
          {
            "answer_id": 4,
            "content": "```DosFileAttributes attr = Files.readAttributes(dir, DosFileAttributes.class);```"
          },
          {
            "answer_id": 5,
            "content": "```PosixFileAttributes attr = Files.readAttributes(dir, PosixFileAttributes.class);```"
          },
          {
            "answer_id": 6,
            "content": "```BasicFileAttributes attr = new BasicFileAttributes(dir);```"
          },
          {
            "answer_id": 7,
            "content": "```BasicFileAttributes attr =dir.getBasicFileAttributes();```"
          }
        ]
      },
      {
        "content": "Which of the following are true? (Choose all that apply.)",
        "question_id": 10,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "The ```class AbstractFileAttributes``` applies to all operating systems"
          },
          {
            "answer_id": 2,
            "content": "The ```class BasicFileAttributes``` applies to all operating systems"
          },
          {
            "answer_id": 3,
            "content": "The ```class DosFileAttributes``` applies to Windows-based operating systems"
          },
          {
            "answer_id": 4,
            "content": "The ```class WindowsFileAttributes``` applies to Windows-based operating systems"
          },
          {
            "answer_id": 5,
            "content": "The ```class PosixFileAttributes``` applies to all Linux/UNIX-based operating systems"
          },
          {
            "answer_id": 6,
            "content": "The ```class UnixFileAttributes``` applies to all Linux/UNIX-based operating systems"
          }
        ]
      },
      {
        "content": "Given a partial directory tree:\n        dir x - |\n        ..........| - dir y\n        ..........| - file a\nIn what order can the following methods be called \nif walking the directory tree from x? \n(Choose all that apply.)\n\nI:preVisitDirectory x \nII:preVisitDirectory x/y \nIII:postVisitDirectory x/y \nIV:postVisitDirectory x\nV:visitFile x/a",
        "question_id": 11,
        "type": "some_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "I, II, III, IV, V"
          },
          {
            "answer_id": 2,
            "content": "I, II, III, V, IV"
          },
          {
            "answer_id": 3,
            "content": "I, V, II, III, IV"
          },
          {
            "answer_id": 4,
            "content": "I, V, II, IV, III"
          },
          {
            "answer_id": 5,
            "content": "V, I, II, III, IV"
          },
          {
            "answer_id": 6,
            "content": "V, I, II, VI, III"
          }
        ]
      },
      {
        "content": "Given:\n```\npublic class MyFileVisitor extends SimpleFileVisitor<Path> {\n  // more code here\n  public FileVisitResult visitFile(Path file, BasicFileAttributes attrs)\n    throws IOException {\n    System.out.println(\"File \" + file);\n    if ( file.getFileName().endsWith(\"Test.java\")) {\n      // CODE HERE \n    }\n    return FileVisitResult.CONTINUE;\n  }\n  // more code here\n}\n```\n        \nWhich code inserted at // CODE HERE would cause \nthe FileVisitor to stop visiting files after \nit sees the file Test.java?",
        "question_id": 12,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```return FileVisitResult.CONTINUE;```"
          },
          {
            "answer_id": 2,
            "content": "```return FileVisitResult.END;```"
          },
          {
            "answer_id": 3,
            "content": "```return FileVisitResult.SKIP_SIBLINGS;```"
          },
          {
            "answer_id": 4,
            "content": "```return FileVisitResult.SKIP_SUBTREE;```"
          },
          {
            "answer_id": 5,
            "content": "```return FileVisitResult.TERMINATE;```"
          },
          {
            "answer_id": 6,
            "content": "```return null;```"
          }
        ]
      },
      {
        "content": "Assume all the files referenced by these paths exist: \n```\nPath a = Paths.get(\"c:/temp/dir/a.txt\");\nPath b = Paths.get(\"c:/temp/dir/subdir/b.txt\");\n```\nWhat is the correct string to pass to PathMatcher \nto match both these files?",
        "question_id": 13,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```\"glob:*/*.txt\"```"
          },
          {
            "answer_id": 2,
            "content": "```\"glob:**.txt\"```"
          },
          {
            "answer_id": 3,
            "content": "```\"glob:*.txt\"```"
          },
          {
            "answer_id": 4,
            "content": "```\"glob:/*/*.txt\"```"
          },
          {
            "answer_id": 5,
            "content": "```\"glob:/**.txt\"```"
          },
          {
            "answer_id": 6,
            "content": "```\"glob:/*.txt\"```"
          },
          {
            "answer_id": 7,
            "content": "None of the above"
          }
        ]
      },
      {
        "content": "Given a partial directory tree at the root of the drive:\ndir x - |\n        ..........| = file a.txt\n        ..........| - dir y\n        ....................| - file b.txt\n        ....................| - dir y\n        ..............................| - file c.txt\nAnd the following snippet:\n```\nPath dir = Paths.get(\"c:/x\");\ntry (DirectoryStream<Path> stream = Files.newDirectoryStream(dir, \"**/*.txt\")) {\nfor (Path path : stream) {\n    System.out.println(path); \n}}\n```\nWhat is the result?",
        "question_id": 14,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "```c:/x/a.txt```"
          },
          {
            "answer_id": 2,
            "content": "```c:/x/a.txt```\n ```c:/x/y/b.txt```\n        ```c:/x/y/z/c.txt```"
          },
          {
            "answer_id": 3,
            "content": "Code compiles but does not output anything"
          },
          {
            "answer_id": 4,
            "content": "Does not compile because DirectoryStream comes from FileSystems, not Files"
          },
          {
            "answer_id": 5,
            "content": "Does not compile for another reason\n"
          }
        ]
      },
      {
        "content": "Given a partial directory tree:\n        dir x - |\n        ..........| - dir y\n        ..........| -file a\nand given that a valid Path object, dir, \npoints to x, and given this snippet: \n```\nWatchKey key = dir.register(watcher, ENTRY_CREATE);\n```\nIf a WatchService is set using the given WatchKey, \nwhat would be the result if a file is added todir y?",
        "question_id": 15,
        "type": "one_answer",
        "answers": [
          {
            "answer_id": 1,
            "content": "No notice is given"
          },
          {
            "answer_id": 2,
            "content": "A notice related to dir x is issued"
          },
          {
            "answer_id": 3,
            "content": "A notice related to dir y is issued"
          },
          {
            "answer_id": 4,
            "content": "Notices for both dir x and dir y are given"
          },
          {
            "answer_id": 5,
            "content": "An Exception is thrown"
          },
          {
            "answer_id": 6,
            "content": "The behavior depends on the underlying operating system"
          }
        ]
      }
    ]
  },
  {
    "exam_id": 2,
    "theme_id": 10,
    "theme_content": "Advanced OO and Design Patterns",
    "questions": [

    ]
  },
  {
    "exam_id": 2,
    "theme_id": 11,
    "theme_content": "Generics and Collections",
    "questions": [

    ]
  },
  {
    "exam_id": 2,
    "theme_id": 12,
    "theme_content": "Inner Classes",
    "questions": [

    ]
  },
  {
    "exam_id": 2,
    "theme_id": 13,
    "theme_content": "Threads",
    "questions": [

    ]
  },
  {
    "exam_id": 2,
    "theme_id": 14,
    "theme_content": "Concurrency",
    "questions": [

    ]
  },
  {
    "exam_id": 2,
    "theme_id": 14,
    "theme_content": "JDBC",
    "questions": [

    ]
  }
]